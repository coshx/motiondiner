<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}' name='tm_unz'>
<field declared_type='uInt' type='I' name='tm_sec'/>
<field declared_type='uInt' type='I' name='tm_min'/>
<field declared_type='uInt' type='I' name='tm_hour'/>
<field declared_type='uInt' type='I' name='tm_mday'/>
<field declared_type='uInt' type='I' name='tm_mon'/>
<field declared_type='uInt' type='I' name='tm_year'/>
</struct>
<struct type='{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}' name='tm_unz_s'>
<field declared_type='uInt' type='I' name='tm_sec'/>
<field declared_type='uInt' type='I' name='tm_min'/>
<field declared_type='uInt' type='I' name='tm_hour'/>
<field declared_type='uInt' type='I' name='tm_mday'/>
<field declared_type='uInt' type='I' name='tm_mon'/>
<field declared_type='uInt' type='I' name='tm_year'/>
</struct>
<struct type='{tm_zip_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}' name='tm_zip'>
<field declared_type='uInt' type='I' name='tm_sec'/>
<field declared_type='uInt' type='I' name='tm_min'/>
<field declared_type='uInt' type='I' name='tm_hour'/>
<field declared_type='uInt' type='I' name='tm_mday'/>
<field declared_type='uInt' type='I' name='tm_mon'/>
<field declared_type='uInt' type='I' name='tm_year'/>
</struct>
<struct type='{tm_zip_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}' name='tm_zip_s'>
<field declared_type='uInt' type='I' name='tm_sec'/>
<field declared_type='uInt' type='I' name='tm_min'/>
<field declared_type='uInt' type='I' name='tm_hour'/>
<field declared_type='uInt' type='I' name='tm_mday'/>
<field declared_type='uInt' type='I' name='tm_mon'/>
<field declared_type='uInt' type='I' name='tm_year'/>
</struct>
<struct type='{unz_file_info_s=&quot;version&quot;I&quot;version_needed&quot;I&quot;flag&quot;I&quot;compression_method&quot;I&quot;dosDate&quot;I&quot;crc&quot;I&quot;compressed_size&quot;I&quot;uncompressed_size&quot;I&quot;size_filename&quot;I&quot;size_file_extra&quot;I&quot;size_file_comment&quot;I&quot;disk_num_start&quot;I&quot;internal_fa&quot;I&quot;external_fa&quot;I&quot;tmu_date&quot;{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}}' type64='{unz_file_info_s=&quot;version&quot;Q&quot;version_needed&quot;Q&quot;flag&quot;Q&quot;compression_method&quot;Q&quot;dosDate&quot;Q&quot;crc&quot;Q&quot;compressed_size&quot;Q&quot;uncompressed_size&quot;Q&quot;size_filename&quot;Q&quot;size_file_extra&quot;Q&quot;size_file_comment&quot;Q&quot;disk_num_start&quot;Q&quot;internal_fa&quot;Q&quot;external_fa&quot;Q&quot;tmu_date&quot;{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}}' name='unz_file_info'>
<field declared_type='uLong' type='L' type64='Q' name='version'/>
<field declared_type='uLong' type='L' type64='Q' name='version_needed'/>
<field declared_type='uLong' type='L' type64='Q' name='flag'/>
<field declared_type='uLong' type='L' type64='Q' name='compression_method'/>
<field declared_type='uLong' type='L' type64='Q' name='dosDate'/>
<field declared_type='uLong' type='L' type64='Q' name='crc'/>
<field declared_type='uLong' type='L' type64='Q' name='compressed_size'/>
<field declared_type='uLong' type='L' type64='Q' name='uncompressed_size'/>
<field declared_type='uLong' type='L' type64='Q' name='size_filename'/>
<field declared_type='uLong' type='L' type64='Q' name='size_file_extra'/>
<field declared_type='uLong' type='L' type64='Q' name='size_file_comment'/>
<field declared_type='uLong' type='L' type64='Q' name='disk_num_start'/>
<field declared_type='uLong' type='L' type64='Q' name='internal_fa'/>
<field declared_type='uLong' type='L' type64='Q' name='external_fa'/>
<field declared_type='tm_unz' type='{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}' name='tmu_date'/>
</struct>
<struct type='{unz_file_info_s=&quot;version&quot;I&quot;version_needed&quot;I&quot;flag&quot;I&quot;compression_method&quot;I&quot;dosDate&quot;I&quot;crc&quot;I&quot;compressed_size&quot;I&quot;uncompressed_size&quot;I&quot;size_filename&quot;I&quot;size_file_extra&quot;I&quot;size_file_comment&quot;I&quot;disk_num_start&quot;I&quot;internal_fa&quot;I&quot;external_fa&quot;I&quot;tmu_date&quot;{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}}' type64='{unz_file_info_s=&quot;version&quot;Q&quot;version_needed&quot;Q&quot;flag&quot;Q&quot;compression_method&quot;Q&quot;dosDate&quot;Q&quot;crc&quot;Q&quot;compressed_size&quot;Q&quot;uncompressed_size&quot;Q&quot;size_filename&quot;Q&quot;size_file_extra&quot;Q&quot;size_file_comment&quot;Q&quot;disk_num_start&quot;Q&quot;internal_fa&quot;Q&quot;external_fa&quot;Q&quot;tmu_date&quot;{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}}' name='unz_file_info_s'>
<field declared_type='uLong' type='L' type64='Q' name='version'/>
<field declared_type='uLong' type='L' type64='Q' name='version_needed'/>
<field declared_type='uLong' type='L' type64='Q' name='flag'/>
<field declared_type='uLong' type='L' type64='Q' name='compression_method'/>
<field declared_type='uLong' type='L' type64='Q' name='dosDate'/>
<field declared_type='uLong' type='L' type64='Q' name='crc'/>
<field declared_type='uLong' type='L' type64='Q' name='compressed_size'/>
<field declared_type='uLong' type='L' type64='Q' name='uncompressed_size'/>
<field declared_type='uLong' type='L' type64='Q' name='size_filename'/>
<field declared_type='uLong' type='L' type64='Q' name='size_file_extra'/>
<field declared_type='uLong' type='L' type64='Q' name='size_file_comment'/>
<field declared_type='uLong' type='L' type64='Q' name='disk_num_start'/>
<field declared_type='uLong' type='L' type64='Q' name='internal_fa'/>
<field declared_type='uLong' type='L' type64='Q' name='external_fa'/>
<field declared_type='tm_unz' type='{tm_unz_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}' name='tmu_date'/>
</struct>
<struct type='{unz_file_pos_s=&quot;pos_in_zip_directory&quot;I&quot;num_of_file&quot;I}' type64='{unz_file_pos_s=&quot;pos_in_zip_directory&quot;Q&quot;num_of_file&quot;Q}' name='unz_file_pos'>
<field declared_type='uLong' type='L' type64='Q' name='pos_in_zip_directory'/>
<field declared_type='uLong' type='L' type64='Q' name='num_of_file'/>
</struct>
<struct type='{unz_file_pos_s=&quot;pos_in_zip_directory&quot;I&quot;num_of_file&quot;I}' type64='{unz_file_pos_s=&quot;pos_in_zip_directory&quot;Q&quot;num_of_file&quot;Q}' name='unz_file_pos_s'>
<field declared_type='uLong' type='L' type64='Q' name='pos_in_zip_directory'/>
<field declared_type='uLong' type='L' type64='Q' name='num_of_file'/>
</struct>
<struct type='{unz_global_info_s=&quot;number_entry&quot;I&quot;size_comment&quot;I}' type64='{unz_global_info_s=&quot;number_entry&quot;Q&quot;size_comment&quot;Q}' name='unz_global_info'>
<field declared_type='uLong' type='L' type64='Q' name='number_entry'/>
<field declared_type='uLong' type='L' type64='Q' name='size_comment'/>
</struct>
<struct type='{unz_global_info_s=&quot;number_entry&quot;I&quot;size_comment&quot;I}' type64='{unz_global_info_s=&quot;number_entry&quot;Q&quot;size_comment&quot;Q}' name='unz_global_info_s'>
<field declared_type='uLong' type='L' type64='Q' name='number_entry'/>
<field declared_type='uLong' type='L' type64='Q' name='size_comment'/>
</struct>
<struct type='{_zip_fileinfo=&quot;tmz_date&quot;{tm_zip_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}&quot;dosDate&quot;I&quot;internal_fa&quot;I&quot;external_fa&quot;I}' type64='{_zip_fileinfo=&quot;tmz_date&quot;{tm_zip_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}&quot;dosDate&quot;Q&quot;internal_fa&quot;Q&quot;external_fa&quot;Q}' name='zip_fileinfo'>
<field declared_type='tm_zip' type='{tm_zip_s=&quot;tm_sec&quot;I&quot;tm_min&quot;I&quot;tm_hour&quot;I&quot;tm_mday&quot;I&quot;tm_mon&quot;I&quot;tm_year&quot;I}' name='tmz_date'/>
<field declared_type='uLong' type='L' type64='Q' name='dosDate'/>
<field declared_type='uLong' type='L' type64='Q' name='internal_fa'/>
<field declared_type='uLong' type='L' type64='Q' name='external_fa'/>
</struct>
<struct type='{zlib_filefunc_def_s=&quot;zopen_file&quot;^?&quot;zread_file&quot;^?&quot;zwrite_file&quot;^?&quot;ztell_file&quot;^?&quot;zseek_file&quot;^?&quot;zclose_file&quot;^?&quot;zerror_file&quot;^?&quot;opaque&quot;^v}' name='zlib_filefunc_def'>
<field declared_type='open_file_func' type='^?' function_pointer='true' name='zopen_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='char*' const='true' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='voidpf' type='^v'/>
</field>
<field declared_type='read_file_func' type='^?' function_pointer='true' name='zread_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='uLong' type='L' type64='Q'/>
<retval declared_type='uLong' type='L' type64='Q'/>
</field>
<field declared_type='write_file_func' type='^?' function_pointer='true' name='zwrite_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='void*' const='true' type='^v'/>
<arg declared_type='uLong' type='L' type64='Q'/>
<retval declared_type='uLong' type='L' type64='Q'/>
</field>
<field declared_type='tell_file_func' type='^?' function_pointer='true' name='ztell_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='seek_file_func' type='^?' function_pointer='true' name='zseek_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='uLong' type='L' type64='Q'/>
<arg declared_type='int' type='i'/>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='close_file_func' type='^?' function_pointer='true' name='zclose_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='testerror_file_func' type='^?' function_pointer='true' name='zerror_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='voidpf' type='^v' name='opaque'/>
</struct>
<struct type='{zlib_filefunc_def_s=&quot;zopen_file&quot;^?&quot;zread_file&quot;^?&quot;zwrite_file&quot;^?&quot;ztell_file&quot;^?&quot;zseek_file&quot;^?&quot;zclose_file&quot;^?&quot;zerror_file&quot;^?&quot;opaque&quot;^v}' name='zlib_filefunc_def_s'>
<field declared_type='open_file_func' type='^?' function_pointer='true' name='zopen_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='char*' const='true' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='voidpf' type='^v'/>
</field>
<field declared_type='read_file_func' type='^?' function_pointer='true' name='zread_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='uLong' type='L' type64='Q'/>
<retval declared_type='uLong' type='L' type64='Q'/>
</field>
<field declared_type='write_file_func' type='^?' function_pointer='true' name='zwrite_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='void*' const='true' type='^v'/>
<arg declared_type='uLong' type='L' type64='Q'/>
<retval declared_type='uLong' type='L' type64='Q'/>
</field>
<field declared_type='tell_file_func' type='^?' function_pointer='true' name='ztell_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='seek_file_func' type='^?' function_pointer='true' name='zseek_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='uLong' type='L' type64='Q'/>
<arg declared_type='int' type='i'/>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='close_file_func' type='^?' function_pointer='true' name='zclose_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='testerror_file_func' type='^?' function_pointer='true' name='zerror_file'>
<arg declared_type='voidpf' type='^v'/>
<arg declared_type='voidpf' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='voidpf' type='^v' name='opaque'/>
</struct>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UAAnalyticsFalseValue'/>
<constant declared_type='NSString*' const='true' type='@' name='UAAnalyticsOptionsLoggingKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UAAnalyticsOptionsRemoteNotificationKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UAAnalyticsOptionsServerKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UAAnalyticsTrueValue'/>
<constant declared_type='NSString*' const='true' type='@' name='UAContentsDisplayOrderID'/>
<constant declared_type='NSString*' const='true' type='@' name='UAContentsDisplayOrderPrice'/>
<constant declared_type='NSString*' const='true' type='@' name='UAContentsDisplayOrderTitle'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UADeprecatedLocationAuthorizationKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventAnalyticsType'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventDesiredAccuracyKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventDistanceFilterKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventForegroundKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventHorizontalAccuracyKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventLatitudeKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventLongitudeKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventProviderKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventUpdateTypeChange'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventUpdateTypeContinuous'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventUpdateTypeKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventUpdateTypeNone'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventUpdateTypeSingle'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationEventVerticalAccuracyKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationServiceAllowedKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UALocationServiceBestAvailableSingleLocationKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationServiceEnabledKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UALocationServicePreferences'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationServiceProviderGps'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationServiceProviderNetwork'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationServiceProviderUnknown'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationServicePurposeKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UALocationServiceTimeoutError'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UASignificantChangeServiceRestartKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UASingleLocationDesiredAccuracyKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UASingleLocationTimeoutKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UAStandardLocationDesiredAccuracyKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UAStandardLocationDistanceFilterKey'/>
<constant declared_type='NSString*' const='true' type='^{NSString=#}' name='UAStandardLocationServiceRestartKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UASubscriptionContentInventoryFailure'/>
<constant declared_type='NSString*' const='true' type='@' name='UASubscriptionProductInventoryFailure'/>
<constant declared_type='NSString*' const='true' type='@' name='UASubscriptionPurchaseInventoryFailure'/>
<constant declared_type='NSString*' const='true' type='@' name='UASubscriptionReceiptVerificationFailure'/>
<constant declared_type='NSString*' const='true' type='@' name='UASubscriptionRequestErrorDomain'/>
<constant declared_type='NSString*' const='true' type='@' name='UASubscriptionTransactionErrorDomain'/>
<constant declared_type='NSString*' type='@' name='UA_ASIHTTPRequestVersion'/>
<constant declared_type='unsigned long' const='true' type='L' type64='Q' name='UA_ASIWWANBandwidthThrottleAmount'/>
<constant declared_type='NSString*' const='true' type='@' name='UA_NetworkRequestErrorDomain'/>
<constant declared_type='NSString*' type='@' name='UA_SBJSONErrorDomain'/>
<constant declared_type='NSString*' const='true' type='@' name='UAirshipTakeOffOptionsAirshipConfigKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UAirshipTakeOffOptionsAnalyticsKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UAirshipTakeOffOptionsDefaultPasswordKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UAirshipTakeOffOptionsDefaultUsernameKey'/>
<constant declared_type='NSString*' const='true' type='@' name='UAirshipTakeOffOptionsLaunchOptionsKey'/>
<constant declared_type='NSTimeInterval' type='d' name='defaultMaximumElapsedTimeForCachedLocation'/>
<constant declared_type='BOOL' type='B' name='logging'/>
<string_constant nsstring='true' name='DB_NAME' value='UAInbox.db'/>
<string_constant nsstring='true' name='INBOX_UI_CLASS' value='UAInboxUI'/>
<string_constant nsstring='true' name='OLD_DB_NAME' value='AirMail.db'/>
<string_constant nsstring='true' name='PUSH_DELEGATE_CLASS' value='UAPushNotificationHandler'/>
<string_constant nsstring='true' name='PUSH_UI_CLASS' value='UAPushUI'/>
<string_constant nsstring='true' name='STOREFRONT_UI_CLASS' value='UAStoreFrontUI'/>
<string_constant nsstring='true' name='SUBSCRIPTION_UI_CLASS' value='UASubscriptionUI'/>
<string_constant nsstring='true' name='UA_VERSION' value='1.1.2'/>
<string_constant nsstring='true' name='kAirshipProductionServer' value='https://device-api.urbanairship.com'/>
<string_constant nsstring='true' name='kRequestMethodGET' value='GET'/>
<string_constant nsstring='true' name='kRequestMethodPOST' value='POST'/>
<string_constant nsstring='true' name='kUAKeychainDeviceIDKey' value='com.urbanairship.deviceID'/>
<string_constant nsstring='true' name='kUA_ReachabilityChangedNotification' value='kNetworkReachabilityChangedNotification'/>
<string_constant nsstring='true' name='kUrlCacheCompoundKeyDelimiter' value='&lt;-version_product-&gt;'/>
<string_constant nsstring='true' name='kUrlCacheContentDictonaryKey' value='content'/>
<string_constant nsstring='true' name='kUrlCacheProductURLKey' value='productURL'/>
<string_constant nsstring='true' name='kUrlCacheProductVersionKey' value='version'/>
<string_constant nsstring='true' name='kUrlCacheTimestampDictionaryKey' value='timestamps'/>
<enum name='APPEND_STATUS_ADDINZIP' value='2'/>
<enum name='APPEND_STATUS_CREATE' value='0'/>
<enum name='APPEND_STATUS_CREATEAFTER' value='1'/>
<enum name='DEBUG_FORM_DATA_REQUEST' value='0'/>
<enum name='DEBUG_HTTP_AUTHENTICATION' value='0'/>
<enum name='DEBUG_PERSISTENT_CONNECTIONS' value='0'/>
<enum name='DEBUG_REQUEST_STATUS' value='0'/>
<enum name='DEBUG_THROTTLING' value='0'/>
<enum name='DEF_MEM_LEVEL' value='8'/>
<enum name='ProductTypeAll' value='0'/>
<enum name='ProductTypeInstalled' value='1'/>
<enum name='ProductTypeOrigin' value='10'/>
<enum name='ProductTypeUpdated' value='2'/>
<enum name='UAAnalyticsFirstBatchUploadInterval' value='15'/>
<enum name='UAAutorenewableDuration1Month' value='2'/>
<enum name='UAAutorenewableDuration1Year' value='6'/>
<enum name='UAAutorenewableDuration2Months' value='3'/>
<enum name='UAAutorenewableDuration3Months' value='4'/>
<enum name='UAAutorenewableDuration6Months' value='5'/>
<enum name='UAAutorenewableDuration7Days' value='1'/>
<enum name='UAAutorenewableDurationNone' value='0'/>
<enum name='UABatchDeleteMessages' value='1'/>
<enum name='UABatchReadMessages' value='0'/>
<enum name='UAInventoryStatusApple' value='3'/>
<enum name='UAInventoryStatusDownloading' value='2'/>
<enum name='UAInventoryStatusFailed' value='5'/>
<enum name='UAInventoryStatusLoaded' value='4'/>
<enum name='UAInventoryStatusPurchaseDisabled' value='1'/>
<enum name='UAInventoryStatusUnloaded' value='0'/>
<enum name='UALocalStorageTypeCached' value='1'/>
<enum name='UALocalStorageTypeCritical' value='0'/>
<enum name='UALocalStorageTypeOffline' value='3'/>
<enum name='UALocalStorageTypeTemporary' value='2'/>
<enum name='UALocationProviderNotUpdating' value='0'/>
<enum name='UALocationProviderUpdating' value='1'/>
<enum name='UALocationServiceTimedOut' value='0'/>
<enum name='UAProductStatusDecompressing' value='5'/>
<enum name='UAProductStatusDownloading' value='4'/>
<enum name='UAProductStatusHasUpdate' value='7'/>
<enum name='UAProductStatusInstalled' value='6'/>
<enum name='UAProductStatusPurchased' value='3'/>
<enum name='UAProductStatusPurchasing' value='1'/>
<enum name='UAProductStatusUnpurchased' value='0'/>
<enum name='UAProductStatusVerifyingReceipt' value='2'/>
<enum name='UASubscriptionAlertFailedRestore' value='2'/>
<enum name='UASubscriptionAlertFailedTransaction' value='1'/>
<enum name='UASubscriptionAlertShowUserEmail' value='0'/>
<enum name='UASubscriptionProductTypeAutorenewable' value='1'/>
<enum name='UASubscriptionProductTypeFree' value='2'/>
<enum name='UASubscriptionProductTypeLegacy' value='0'/>
<enum name='UASubscriptionReceiptVerificationFailedErrorType' value='1'/>
<enum name='UASubscriptionReceiptVerificationServiceFailedErrorType' value='2'/>
<enum name='UATagTypeCountry' value='8'/>
<enum name='UATagTypeDeviceType' value='16'/>
<enum name='UATagTypeLanguage' value='4'/>
<enum name='UATagTypeTimeZone' value='1'/>
<enum name='UATagTypeTimeZoneAbbreviation' value='2'/>
<enum name='UAUserStateCreating' value='4'/>
<enum name='UAUserStateEmpty' value='0'/>
<enum name='UAUserStateInRecovery' value='3'/>
<enum name='UAUserStateNoEmail' value='1'/>
<enum name='UAUserStateWithEmail' value='2'/>
<enum name='UA_ASIAskServerIfModifiedCachePolicy' value='8'/>
<enum name='UA_ASIAskServerIfModifiedWhenStaleCachePolicy' value='4'/>
<enum name='UA_ASIAuthenticationErrorType' value='3'/>
<enum name='UA_ASICacheForSessionDurationCacheStoragePolicy' value='0'/>
<enum name='UA_ASICachePermanentlyCacheStoragePolicy' value='1'/>
<enum name='UA_ASICompressionError' value='11'/>
<enum name='UA_ASIConnectionFailureErrorType' value='1'/>
<enum name='UA_ASIDoNotReadFromCacheCachePolicy' value='1'/>
<enum name='UA_ASIDoNotWriteToCacheCachePolicy' value='2'/>
<enum name='UA_ASIDontLoadCachePolicy' value='32'/>
<enum name='UA_ASIFallbackToCacheIfLoadFailsCachePolicy' value='64'/>
<enum name='UA_ASIFileManagementError' value='8'/>
<enum name='UA_ASIHTTPAuthenticationNeeded' value='1'/>
<enum name='UA_ASIInternalErrorWhileApplyingCredentialsType' value='7'/>
<enum name='UA_ASIInternalErrorWhileBuildingRequestType' value='6'/>
<enum name='UA_ASIMultipartFormDataPostFormat' value='0'/>
<enum name='UA_ASINoAuthenticationNeededYet' value='0'/>
<enum name='UA_ASIOnlyLoadIfNotCachedCachePolicy' value='16'/>
<enum name='UA_ASIProxyAuthenticationNeeded' value='2'/>
<enum name='UA_ASIProxyAuthenticationType' value='1'/>
<enum name='UA_ASIRequestCancelledErrorType' value='4'/>
<enum name='UA_ASIRequestTimedOutErrorType' value='2'/>
<enum name='UA_ASIStandardAuthenticationType' value='0'/>
<enum name='UA_ASITooMuchRedirectionErrorType' value='9'/>
<enum name='UA_ASIURLEncodedPostFormat' value='1'/>
<enum name='UA_ASIUnableToCreateRequestErrorType' value='5'/>
<enum name='UA_ASIUnhandledExceptionError' value='10'/>
<enum name='UA_ASIUseDefaultCachePolicy' value='0'/>
<enum name='UA_ECTRL' value='5'/>
<enum name='UA_EDEPTH' value='7'/>
<enum name='UA_EEOF' value='11'/>
<enum name='UA_EESCAPE' value='8'/>
<enum name='UA_EFRAGMENT' value='4'/>
<enum name='UA_EINPUT' value='12'/>
<enum name='UA_EPARSE' value='3'/>
<enum name='UA_EPARSENUM' value='2'/>
<enum name='UA_ETRAILCOMMA' value='9'/>
<enum name='UA_ETRAILGARBAGE' value='10'/>
<enum name='UA_EUNICODE' value='6'/>
<enum name='UA_EUNSUPPORTED' value='1'/>
<enum name='UA_NotReachable' value='0'/>
<enum name='UA_ReachableViaWWAN' value='2'/>
<enum name='UA_ReachableViaWiFi' value='1'/>
<enum name='UNZ_BADZIPFILE' value='-103'/>
<enum name='UNZ_CRCERROR' value='-105'/>
<enum name='UNZ_END_OF_LIST_OF_FILE' value='-100'/>
<enum name='UNZ_EOF' value='0'/>
<enum name='UNZ_ERRNO' value='-1'/>
<enum name='UNZ_INTERNALERROR' value='-104'/>
<enum name='UNZ_OK' value='0'/>
<enum name='UNZ_PARAMERROR' value='-102'/>
<enum name='X_UA_MAX_BATCH' value='512000'/>
<enum name='X_UA_MAX_TOTAL' value='5242880'/>
<enum name='X_UA_MAX_WAIT' value='604800'/>
<enum name='X_UA_MIN_BACKGROUND_LOCATION_INTERVAL' value='900'/>
<enum name='X_UA_MIN_BATCH_INTERVAL' value='60'/>
<enum name='ZIP_BADZIPFILE' value='-103'/>
<enum name='ZIP_EOF' value='0'/>
<enum name='ZIP_ERRNO' value='-1'/>
<enum name='ZIP_INTERNALERROR' value='-104'/>
<enum name='ZIP_OK' value='0'/>
<enum name='ZIP_PARAMERROR' value='-102'/>
<enum name='ZLIB_FILEFUNC_MODE_CREATE' value='8'/>
<enum name='ZLIB_FILEFUNC_MODE_EXISTING' value='4'/>
<enum name='ZLIB_FILEFUNC_MODE_READ' value='1'/>
<enum name='ZLIB_FILEFUNC_MODE_READWRITEFILTER' value='3'/>
<enum name='ZLIB_FILEFUNC_MODE_WRITE' value='2'/>
<enum name='ZLIB_FILEFUNC_SEEK_CUR' value='1'/>
<enum name='ZLIB_FILEFUNC_SEEK_END' value='2'/>
<enum name='ZLIB_FILEFUNC_SEEK_SET' value='0'/>
<enum name='kCFCoreFoundationVersionNumber_iPhoneOS_4_0' value='550.32'/>
<enum name='kDefaultUrlCacheExpirationInterval' value='86400'/>
<enum name='kEventAppActiveSize' value='120'/>
<enum name='kEventAppExitSize' value='200'/>
<enum name='kEventAppInactiveSize' value='120'/>
<enum name='kEventAppInitSize' value='450'/>
<enum name='kEventDeviceRegistrationSize' value='200'/>
<enum name='kEventPushReceivedSize' value='200'/>
<enum name='kMaxRetryTime' value='3'/>
<function name='UAActiveViewController'>
<retval declared_type='UIViewController*' type='@'/>
</function>
<function name='UAFrameForCurrentOrientation'>
<arg declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='frame'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='UARotateTransformForCurrentOrientation'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='UA_NewBase64Decode'>
<arg declared_type='char*' const='true' type='*' name='inputBuffer'/>
<arg declared_type='size_t' type='L' type64='Q' name='length'/>
<arg declared_type='size_t*' type='^I' type64='^Q' name='outputLength'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='UA_NewBase64Encode'>
<arg declared_type='void*' const='true' type='^v' name='inputBuffer'/>
<arg declared_type='size_t' type='L' type64='Q' name='length'/>
<arg declared_type='_Bool' type='B' name='separateLines'/>
<arg declared_type='size_t*' type='^I' type64='^Q' name='outputLength'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='UA_base64EncodedStringFromData'>
<arg declared_type='NSData*' type='@' name='data'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='UA_dataFromBase64String'>
<arg declared_type='NSString*' type='@' name='aString'/>
<retval declared_type='NSData*' type='@'/>
</function>
<function name='UA_fill_fopen_filefunc'>
<arg declared_type='zlib_filefunc_def*' type='^{zlib_filefunc_def_s=^?^?^?^?^?^?^?^v}' name='pzlib_filefunc_def'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UA_unzClose'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzCloseCurrentFile'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGetCurrentFileInfo'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='unz_file_info*' type='^{unz_file_info_s=IIIIIIIIIIIIII{tm_unz_s=IIIIII}}' type64='^{unz_file_info_s=QQQQQQQQQQQQQQ{tm_unz_s=IIIIII}}' name='pfile_info'/>
<arg declared_type='char*' type='*' name='szFileName'/>
<arg declared_type='uLong' type='L' type64='Q' name='fileNameBufferSize'/>
<arg declared_type='void*' type='^v' name='extraField'/>
<arg declared_type='uLong' type='L' type64='Q' name='extraFieldBufferSize'/>
<arg declared_type='char*' type='*' name='szComment'/>
<arg declared_type='uLong' type='L' type64='Q' name='commentBufferSize'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGetFilePos'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='unz_file_pos*' type='^{unz_file_pos_s=II}' type64='^{unz_file_pos_s=QQ}' name='file_pos'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGetGlobalComment'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='char*' type='*' name='szComment'/>
<arg declared_type='uLong' type='L' type64='Q' name='uSizeBuf'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGetGlobalInfo'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='unz_global_info*' type='^{unz_global_info_s=II}' type64='^{unz_global_info_s=QQ}' name='pglobal_info'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGetLocalExtrafield'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='voidp' type='^v' name='buf'/>
<arg declared_type='unsigned int' type='I' name='len'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGetOffset'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='uLong' type='L' type64='Q'/>
</function>
<function name='UA_unzGoToFilePos'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='unz_file_pos*' type='^{unz_file_pos_s=II}' type64='^{unz_file_pos_s=QQ}' name='file_pos'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGoToFirstFile'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzGoToNextFile'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzLocateFile'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='char*' const='true' type='*' name='szFileName'/>
<arg declared_type='int' type='i' name='iCaseSensitivity'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzOpen'>
<arg declared_type='char*' const='true' type='*' name='path'/>
<retval declared_type='unzFile' type='^v'/>
</function>
<function name='UA_unzOpen2'>
<arg declared_type='char*' const='true' type='*' name='path'/>
<arg declared_type='zlib_filefunc_def*' type='^{zlib_filefunc_def_s=^?^?^?^?^?^?^?^v}' name='pzlib_filefunc_def'/>
<retval declared_type='unzFile' type='^v'/>
</function>
<function name='UA_unzOpenCurrentFile'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzOpenCurrentFile2'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='int*' type='^i' name='method'/>
<arg declared_type='int*' type='^i' name='level'/>
<arg declared_type='int' type='i' name='raw'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzOpenCurrentFile3'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='int*' type='^i' name='method'/>
<arg declared_type='int*' type='^i' name='level'/>
<arg declared_type='int' type='i' name='raw'/>
<arg declared_type='char*' const='true' type='*' name='password'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzOpenCurrentFilePassword'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='char*' const='true' type='*' name='password'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzReadCurrentFile'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='voidp' type='^v' name='buf'/>
<arg declared_type='unsigned int' type='I' name='len'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzRepair'>
<arg declared_type='char*' const='true' type='*' name='file'/>
<arg declared_type='char*' const='true' type='*' name='fileOut'/>
<arg declared_type='char*' const='true' type='*' name='fileOutTmp'/>
<arg declared_type='uLong*' type='^I' type64='^Q' name='nRecovered'/>
<arg declared_type='uLong*' type='^I' type64='^Q' name='bytesRecovered'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzSetOffset'>
<arg declared_type='unzFile' type='^v' name='file'/>
<arg declared_type='uLong' type='L' type64='Q' name='pos'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzStringFileNameCompare'>
<arg declared_type='char*' const='true' type='*' name='fileName1'/>
<arg declared_type='char*' const='true' type='*' name='fileName2'/>
<arg declared_type='int' type='i' name='iCaseSensitivity'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unzeof'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_unztell'>
<arg declared_type='unzFile' type='^v' name='file'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='UA_zipClose'>
<arg declared_type='zipFile' type='^v' name='file'/>
<arg declared_type='char*' const='true' type='*' name='global_comment'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_zipCloseFileInZip'>
<arg declared_type='zipFile' type='^v' name='file'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_zipCloseFileInZipRaw'>
<arg declared_type='zipFile' type='^v' name='file'/>
<arg declared_type='uLong' type='L' type64='Q' name='uncompressed_size'/>
<arg declared_type='uLong' type='L' type64='Q' name='crc32'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_zipOpen'>
<arg declared_type='char*' const='true' type='*' name='pathname'/>
<arg declared_type='int' type='i' name='append'/>
<retval declared_type='zipFile' type='^v'/>
</function>
<function name='UA_zipOpen2'>
<arg declared_type='char*' const='true' type='*' name='pathname'/>
<arg declared_type='int' type='i' name='append'/>
<arg declared_type='zipcharpc*' type='^*' name='globalcomment'/>
<arg declared_type='zlib_filefunc_def*' type='^{zlib_filefunc_def_s=^?^?^?^?^?^?^?^v}' name='pzlib_filefunc_def'/>
<retval declared_type='zipFile' type='^v'/>
</function>
<function name='UA_zipOpenNewFileInZip'>
<arg declared_type='zipFile' type='^v' name='file'/>
<arg declared_type='char*' const='true' type='*' name='filename'/>
<arg declared_type='zip_fileinfo*' const='true' type='^{_zip_fileinfo={tm_zip_s=IIIIII}III}' type64='^{_zip_fileinfo={tm_zip_s=IIIIII}QQQ}' name='zipfi'/>
<arg declared_type='void*' const='true' type='^v' name='extrafield_local'/>
<arg declared_type='uInt' type='I' name='size_extrafield_local'/>
<arg declared_type='void*' const='true' type='^v' name='extrafield_global'/>
<arg declared_type='uInt' type='I' name='size_extrafield_global'/>
<arg declared_type='char*' const='true' type='*' name='comment'/>
<arg declared_type='int' type='i' name='method'/>
<arg declared_type='int' type='i' name='level'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_zipOpenNewFileInZip2'>
<arg declared_type='zipFile' type='^v' name='file'/>
<arg declared_type='char*' const='true' type='*' name='filename'/>
<arg declared_type='zip_fileinfo*' const='true' type='^{_zip_fileinfo={tm_zip_s=IIIIII}III}' type64='^{_zip_fileinfo={tm_zip_s=IIIIII}QQQ}' name='zipfi'/>
<arg declared_type='void*' const='true' type='^v' name='extrafield_local'/>
<arg declared_type='uInt' type='I' name='size_extrafield_local'/>
<arg declared_type='void*' const='true' type='^v' name='extrafield_global'/>
<arg declared_type='uInt' type='I' name='size_extrafield_global'/>
<arg declared_type='char*' const='true' type='*' name='comment'/>
<arg declared_type='int' type='i' name='method'/>
<arg declared_type='int' type='i' name='level'/>
<arg declared_type='int' type='i' name='raw'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_zipOpenNewFileInZip3'>
<arg declared_type='zipFile' type='^v' name='file'/>
<arg declared_type='char*' const='true' type='*' name='filename'/>
<arg declared_type='zip_fileinfo*' const='true' type='^{_zip_fileinfo={tm_zip_s=IIIIII}III}' type64='^{_zip_fileinfo={tm_zip_s=IIIIII}QQQ}' name='zipfi'/>
<arg declared_type='void*' const='true' type='^v' name='extrafield_local'/>
<arg declared_type='uInt' type='I' name='size_extrafield_local'/>
<arg declared_type='void*' const='true' type='^v' name='extrafield_global'/>
<arg declared_type='uInt' type='I' name='size_extrafield_global'/>
<arg declared_type='char*' const='true' type='*' name='comment'/>
<arg declared_type='int' type='i' name='method'/>
<arg declared_type='int' type='i' name='level'/>
<arg declared_type='int' type='i' name='raw'/>
<arg declared_type='int' type='i' name='windowBits'/>
<arg declared_type='int' type='i' name='memLevel'/>
<arg declared_type='int' type='i' name='strategy'/>
<arg declared_type='char*' const='true' type='*' name='password'/>
<arg declared_type='uLong' type='L' type64='Q' name='crcForCtypting'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UA_zipWriteInFileInZip'>
<arg declared_type='zipFile' type='^v' name='file'/>
<arg declared_type='void*' const='true' type='^v' name='buf'/>
<arg declared_type='unsigned int' type='I' name='len'/>
<retval declared_type='int' type='i'/>
</function>
<function name='decrypt_byte'>
<arg declared_type='unsigned long*' type='^L' type64='^Q' name='pkeys'/>
<arg declared_type='unsigned long*' const='true' type='^L' type64='^Q' name='pcrc_32_tab'/>
<retval declared_type='int' type='i'/>
</function>
<function name='init_keys'>
<arg declared_type='char*' const='true' type='*' name='passwd'/>
<arg declared_type='unsigned long*' type='^L' type64='^Q' name='pkeys'/>
<arg declared_type='unsigned long*' const='true' type='^L' type64='^Q' name='pcrc_32_tab'/>
<retval declared_type='void' type='v'/>
</function>
<function name='update_keys'>
<arg declared_type='unsigned long*' type='^L' type64='^Q' name='pkeys'/>
<arg declared_type='unsigned long*' const='true' type='^L' type64='^Q' name='pcrc_32_tab'/>
<arg declared_type='int' type='i' name='c'/>
<retval declared_type='int' type='i'/>
</function>
<function_alias name='UA_ASI_DEBUG_LOG' original='NSLog'/>
<class name='AirshipVersion'>
<method class_method='true' selector='get'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='ErrorMessage:'>
<arg declared_type='NSString*' type='@' index='0' name='msg'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OverWriteOperation:'>
<arg declared_type='NSString*' type='@' index='0' name='file'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addTagToDeviceFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTagToDeviceSucceeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='authenticationNeededForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='batchDeleteFailed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='batchDeleteFinished'>
<retval declared_type='void' type='v'/>
</method>
<method selector='batchMarkAsReadFailed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='batchMarkAsReadFinished'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedResponseDataForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='cachedResponseHeadersForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='callbackArguments:withOptions:'>
<arg declared_type='NSArray*' type='@' index='0' name='args'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='options'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='canUseCachedDataForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearCachedResponsesForStoragePolicy:'>
<arg declared_type='UA_ASICacheStoragePolicy' type='i' index='0' name='cachePolicy'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='closeApnsSettingsAnimated:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='closeTokenSettingsAnimated:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='decompressDidFail:'>
<arg declared_type='UAZipDownloadContent*' type='@' index='0' name='zipDownloadContent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='decompressDidSucceed:'>
<arg declared_type='UAZipDownloadContent*' type='@' index='0' name='zipDownloadContent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultCachePolicy'>
<retval declared_type='UA_ASICachePolicy' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='desiredAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method class_method='true' selector='displayInbox:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayLocalizedNotificationAlert:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='alertDict'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='displayMessage:message:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='NSString*' type='@' index='1' name='messageID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayNotificationAlert:'>
<arg declared_type='NSString*' type='@' index='0' name='alertMessage'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='displayStoreFront:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='displaySubscription:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='distanceFilter'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='downloadContentFailed:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadContentFinished:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadQueueProgress:count:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<arg declared_type='int' type='i' index='1' name='count'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='expiryDateForRequest:maxAge:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='maxAge'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='getAlertHandler'>
<retval declared_type='id' type='@'/>
</method>
<method selector='handleBackgroundNotification:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='notification'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleBadgeUpdate:'>
<arg declared_type='int' type='i' index='0' name='badgeNumber'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleNotification:withCustomPayload:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='notification'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='customPayload'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='hideSubscription'>
<retval declared_type='void' type='v'/>
</method>
<method selector='humanReadable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inboxLoadFailed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='inventoryGroupUpdated'>
<retval declared_type='void' type='v'/>
</method>
<method selector='inventoryProductsChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inventoryStatusChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inventoryUpdateFailedWithError:'>
<arg declared_type='NSError*' type='@' index='0' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isCachedDataCurrentForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='loadLaunchMessage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager'>
<retval declared_type='CLLocationManager*' type='@'/>
</method>
<method selector='locationProvider:withLocationManager:didChangeAuthorizationStatus:'>
<arg declared_type='id' type='@' index='0' name='locationProvider'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='CLAuthorizationStatus' type='i' index='2' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationProvider:withLocationManager:didFailWithError:'>
<arg declared_type='id' type='@' index='0' name='locationProvider'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='NSError*' type='@' index='2' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationProvider:withLocationManager:didUpdateLocation:fromLocation:'>
<arg declared_type='id' type='@' index='0' name='locationProvider'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='CLLocation*' type='@' index='2' name='newLocation'/>
<arg declared_type='CLLocation*' type='@' index='3' name='oldLocation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationService:didChangeAuthorizationStatus:'>
<arg declared_type='UALocationService*' type='@' index='0' name='service'/>
<arg declared_type='CLAuthorizationStatus' type='i' index='1' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationService:didFailWithError:'>
<arg declared_type='UALocationService*' type='@' index='0' name='service'/>
<arg declared_type='NSError*' type='@' index='1' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationService:didUpdateToLocation:fromLocation:'>
<arg declared_type='UALocationService*' type='@' index='0' name='service'/>
<arg declared_type='CLLocation*' type='@' index='1' name='newLocation'/>
<arg declared_type='CLLocation*' type='@' index='2' name='oldLocation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='maxDepth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='messageListLoaded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='messageListWillLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='newMessageArrived:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='message'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='openApnsSettings:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='openTokenSettings:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathToCachedResponseDataForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathToCachedResponseHeadersForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathToStoreCachedResponseDataForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathToStoreCachedResponseHeadersForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='playNotificationSound:'>
<arg declared_type='NSString*' type='@' index='0' name='sound'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='productProgressChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='progress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='productPurchased:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='productStatusChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='productsDownloadProgress:count:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<arg declared_type='int' type='i' index='1' name='count'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='provider'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyAuthenticationNeededForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchaseProductFailed:withError:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<arg declared_type='NSError*' type='@' index='1' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchaseProductFinished:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purpose'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='quitInbox'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='quitStoreFront'>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceTokenFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceTokenSucceeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCachedDataForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCachedDataForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTagFromDeviceFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTagFromDeviceSucceeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didReceiveBytes:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='bytes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didReceiveData:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSData*' type='@' index='1' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didReceiveResponseHeaders:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='responseHeaders'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didSendBytes:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='bytes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:incrementDownloadSizeBy:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='newLength'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:incrementUploadSizeBy:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='newLength'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:willRedirectToURL:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSURL*' type='@' index='1' name='newURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDidFail:'>
<arg declared_type='UAHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDidSucceed:'>
<arg declared_type='UADownloadContent*' type='@' index='0' name='downloadContent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDidSucceed:response:responseData:'>
<arg declared_type='UAHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSHTTPURLResponse*' type='@' index='1' name='response'/>
<arg declared_type='NSData*' type='@' index='2' name='responseData'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestFinished:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestRedirected:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestStarted:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAutorenewableProductFailed:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAutorenewablesFailedWithError:'>
<arg declared_type='NSError*' type='@' index='0' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAutorenewablesFinished:'>
<arg declared_type='NSArray*' type='@' index='0' name='productsRestored'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreStatusChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='inRestoring'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='serviceStatus'>
<retval declared_type='UALocationProviderStatus' type='i'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDesiredAccuracy:'>
<arg declared_type='CLLocationAccuracy' type='d' index='0' name='desiredAccuracy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDistanceFilter:'>
<arg declared_type='CLLocationDistance' type='d' index='0' name='distanceFilter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHumanReadable:'>
<arg declared_type='BOOL' type='B' index='0' name='humanReadable'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocationManager:'>
<arg declared_type='CLLocationManager*' type='@' index='0' name='locationManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxDepth:'>
<arg declared_type='NSUInteger' type='I' index='0' type64='Q' name='maxDepth'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' index='0' name='newProgress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProvider:'>
<arg declared_type='NSString*' type='@' index='0' name='provider'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurpose:'>
<arg declared_type='NSString*' type='@' index='0' name='newPurpose'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceStatus:'>
<arg declared_type='UALocationProviderStatus' type='i' index='0' name='serviceStatus'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortKeys:'>
<arg declared_type='BOOL' type='B' index='0' name='sortKeys'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAlert:for:'>
<arg declared_type='UASubscriptionAlertType' type='i' index='0' name='type'/>
<arg declared_type='id' type='@' index='1' name='sender'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showConfirmRestoringAlert:delegate:approveSelector:disapproveSelector:'>
<arg declared_type='NSInteger' type='i' index='0' type64='q' name='restoreItemsCount'/>
<arg declared_type='id' type='@' index='1' name='object'/>
<arg declared_type='SEL' type=':' index='2' name='okSelector'/>
<arg declared_type='SEL' type=':' index='3' name='cancelSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showDecompressContentFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showDownloadContentFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showPaymentTransactionFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showReceiptVerifyFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='singleMessageMarkAsReadFailed:'>
<arg declared_type='UAInboxMessage*' type='@' index='0' name='message'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='singleMessageMarkAsReadFinished:'>
<arg declared_type='UAInboxMessage*' type='@' index='0' name='message'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortKeys'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeFrontWillHide'>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeResponseForRequest:maxAge:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='maxAge'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionProductRenewed:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionWillEnterBackground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionWillEnterForeground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionsUpdated:'>
<arg declared_type='NSArray*' type='@' index='0' name='subscriptions'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unRegisterDeviceTokenFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unRegisterDeviceTokenSucceeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateExpiryForRequest:maxAge:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='maxAge'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userRecoveryFailed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userRecoveryFinished'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userRecoveryStarted'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userRetrieveFailed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userRetrieveFinished'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userRetrieveStarted'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userSubscriptionsUpdated:'>
<arg declared_type='NSArray*' type='@' index='0' name='subscriptions'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userUpdateFailed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userUpdated'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='StoreFrontVersion'>
<method class_method='true' selector='get'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='SubscriptionVersion'>
<method class_method='true' selector='get'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UAAnalytics'>
<method selector='addEvent:'>
<arg declared_type='UAEvent*' type='@' index='0' name='event'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='databaseSize'>
<retval declared_type='int' type='i'/>
</method>
<method selector='handleNotification:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithOptions:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='options'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lastSendTime'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='notificationUserInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='oldestEventTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='sendBackgroundTask'>
<retval declared_type='int' type='i'/>
</method>
<method selector='sendInterval'>
<retval declared_type='int' type='i'/>
</method>
<method selector='sendTimer'>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method selector='server'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='x_ua_max_batch'>
<retval declared_type='int' type='i'/>
</method>
<method selector='x_ua_max_total'>
<retval declared_type='int' type='i'/>
</method>
<method selector='x_ua_max_wait'>
<retval declared_type='int' type='i'/>
</method>
<method selector='x_ua_min_batch_interval'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='UAAnalyticsDBManager'>
<method selector='addEvent:withSession:'>
<arg declared_type='UAEvent*' type='@' index='0' name='event'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='session'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteBySessionId:'>
<arg declared_type='NSString*' type='@' index='0' name='sessionId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteEvent:'>
<arg declared_type='NSNumber*' type='@' index='0' name='eventId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteEvents:'>
<arg declared_type='NSArray*' type='@' index='0' name='events'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteOldestSession'>
<retval declared_type='void' type='v'/>
</method>
<method selector='eventCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='forceRelease'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getEventByEventId:'>
<arg declared_type='NSString*' type='@' index='0' name='event_id'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getEvents:'>
<arg declared_type='int' type='i' index='0' name='max'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='resetDB'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UAAnalyticsDBManager*' type='@'/>
</method>
<method selector='sizeInBytes'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='UAAsyncImageView'>
<method selector='loadImageFromURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='onReady'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='setOnReady:'>
<arg declared_type='SEL' type=':' index='0' name='onReady'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id' type='@' index='0' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UABaseLocationProvider'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='desiredAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method selector='distanceFilter'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='location'>
<retval declared_type='CLLocation*' type='@'/>
</method>
<method selector='locationChangeMeetsAccuracyRequirements:from:'>
<arg declared_type='CLLocation*' type='@' index='0' name='newLocation'/>
<arg declared_type='CLLocation*' type='@' index='1' name='oldLocation'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locationManager'>
<retval declared_type='CLLocationManager*' type='@'/>
</method>
<method selector='maximumElapsedTimeForCachedLocation'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='provider'>
<retval declared_type='NSString*' type='^{NSString=#}'/>
</method>
<method selector='purpose'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='serviceStatus'>
<retval declared_type='UALocationProviderStatus' type='i'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDesiredAccuracy:'>
<arg declared_type='CLLocationAccuracy' type='d' index='0' name='desiredAccuracy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDistanceFilter:'>
<arg declared_type='CLLocationDistance' type='d' index='0' name='distanceFilter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocationManager:'>
<arg declared_type='CLLocationManager*' type='@' index='0' name='locationManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumElapsedTimeForCachedLocation:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='maximumElapsedTimeForCachedLocation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProvider:'>
<arg declared_type='NSString*' type='^{NSString=#}' index='0' name='provider'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurpose:'>
<arg declared_type='NSString*' type='@' index='0' name='newPurpose'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceStatus:'>
<arg declared_type='UALocationProviderStatus' type='i' index='0' name='serviceStatus'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAContentInventory'>
<method selector='contentArray'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='contentForKey:'>
<arg declared_type='NSString*' type='@' index='0' name='contentKey'/>
<retval declared_type='UASubscriptionContent*' type='@'/>
</method>
<method selector='contentForSubscription:'>
<arg declared_type='NSString*' type='@' index='0' name='subscriptionKey'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='loadInventory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadWithArray:'>
<arg declared_type='NSArray*' type='@' index='0' name='array'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAContentURLCache'>
<method class_method='true' selector='cacheWithExpirationInterval:withPath:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='interval'/>
<arg declared_type='NSString*' type='@' index='1' name='pathString'/>
<retval declared_type='UAContentURLCache*' type='@'/>
</method>
<method selector='contentDictionary'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='contentForProductURL:withVersion:'>
<arg declared_type='NSURL*' type='@' index='0' name='productURL'/>
<arg declared_type='NSNumber*' type='@' index='1' name='version'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='expirationInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='initWithExpirationInterval:withPath:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='interval'/>
<arg declared_type='NSString*' type='@' index='1' name='pathString'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setContent:forProductURL:withVersion:'>
<arg declared_type='NSURL*' type='@' index='0' name='contentURL'/>
<arg declared_type='NSURL*' type='@' index='1' name='productURL'/>
<arg declared_type='NSNumber*' type='@' index='2' name='version'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentDictionary:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='contentDictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpirationInterval:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='expirationInterval'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimestampDictionary:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='timestampDictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timestampDictionary'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
</class>
<class name='UADateUtils'>
<method class_method='true' selector='formattedDateRelativeToNow:'>
<arg declared_type='NSDate*' type='@' index='0' name='date'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UADownloadContent'>
<method selector='clearBeforeDownload'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='downloadFileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadRequestURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='downloadTmpPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='postData'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='progressDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='requestMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setClearBeforeDownload:'>
<arg declared_type='BOOL' type='B' index='0' name='clearBeforeDownload'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadFileName:'>
<arg declared_type='NSString*' type='@' index='0' name='downloadFileName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadPath:'>
<arg declared_type='NSString*' type='@' index='0' name='downloadPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadRequestURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='downloadRequestURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTmpPath:'>
<arg declared_type='NSString*' type='@' index='0' name='downloadTmpPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='password'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostData:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='postData'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressDelegate:'>
<arg declared_type='id' type='@' index='0' name='progressDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestMethod:'>
<arg declared_type='NSString*' type='@' index='0' name='requestMethod'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseString:'>
<arg declared_type='NSString*' type='@' index='0' name='responseString'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='id' type='@' index='0' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg declared_type='NSString*' type='@' index='0' name='username'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='id' type='@'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UADownloadManager'>
<method selector='allDownloadingContents'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cancel:'>
<arg declared_type='UADownloadContent*' type='@' index='0' name='downloadContent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='download:'>
<arg declared_type='UADownloadContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadingContentCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='endBackground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isDownloading:'>
<arg declared_type='UADownloadContent*' type='@' index='0' name='downloadContent'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateProgressDelegate:'>
<arg declared_type='UADownloadContent*' type='@' index='0' name='downloadContent'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAEvent'>
<method selector='addDataFromSessionForKey:'>
<arg declared_type='NSString*' type='@' index='0' name='dataKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDataWithValue:forKey:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<arg declared_type='NSString*' type='@' index='1' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='data'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method class_method='true' selector='event'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='eventWithContext:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='event_id'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='gatherData:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='context'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getEstimatedSize'>
<retval declared_type='int' type='i'/>
</method>
<method selector='getType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithContext:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='time'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UAEventCustom'>
<method class_method='true' selector='eventWithType:'>
<arg declared_type='NSString*' type='@' index='0' name='aType'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='eventWithType:andContext:'>
<arg declared_type='NSString*' type='@' index='0' name='aType'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithType:'>
<arg declared_type='NSString*' type='@' index='0' name='aType'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithType:andContext:'>
<arg declared_type='NSString*' type='@' index='0' name='aType'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='context'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UAHTTPConnection'>
<method selector='connection:didFailWithError:'>
<arg declared_type='NSURLConnection*' type='@' index='0' name='connection'/>
<arg declared_type='NSError*' type='@' index='1' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connection:didReceiveData:'>
<arg declared_type='NSURLConnection*' type='@' index='0' name='connection'/>
<arg declared_type='NSData*' type='@' index='1' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connection:didReceiveResponse:'>
<arg declared_type='NSURLConnection*' type='@' index='0' name='connection'/>
<arg declared_type='NSHTTPURLResponse*' type='@' index='1' name='response'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectionDidFinishLoading:'>
<arg declared_type='NSURLConnection*' type='@' index='0' name='connection'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='connectionWithRequest:'>
<arg declared_type='UAHTTPRequest*' type='@' index='0' name='httpRequest'/>
<retval declared_type='UAHTTPConnection*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='UAHTTPRequest*' type='@' index='0' name='httpRequest'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUrlConnection:'>
<arg declared_type='NSURLConnection*' type='@' index='0' name='urlConnection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='start'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='urlConnection'>
<retval declared_type='NSURLConnection*' type='@'/>
</method>
</class>
<class name='UAHTTPRequest'>
<method selector='HTTPMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addRequestHeader:value:'>
<arg declared_type='NSString*' type='@' index='0' name='header'/>
<arg declared_type='NSString*' type='@' index='1' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBodyData:'>
<arg declared_type='NSData*' type='@' index='0' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='body'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='compressBody'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='headers'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithURLString:'>
<arg declared_type='NSString*' type='@' index='0' name='urlString'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='requestWithURLString:'>
<arg declared_type='NSString*' type='@' index='0' name='urlString'/>
<retval declared_type='UAHTTPRequest*' type='@'/>
</method>
<method selector='setBody:'>
<arg declared_type='NSData*' type='@' index='0' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompressBody:'>
<arg declared_type='BOOL' type='B' index='0' name='compressBody'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPMethod:'>
<arg declared_type='NSString*' type='@' index='0' name='HTTPMethod'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='password'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='id' type='@' index='0' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg declared_type='NSString*' type='@' index='0' name='username'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='id' type='@'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UAInbox'>
<method selector='clientCache'>
<retval declared_type='NSURLCache*' type='@'/>
</method>
<method class_method='true' selector='displayInbox:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='displayMessage:message:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='NSString*' type='@' index='1' name='messageID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='forceRelease'>
<retval declared_type='void' type='v'/>
</method>
<method selector='inboxCache'>
<retval declared_type='NSURLCache*' type='@'/>
</method>
<method selector='jsDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='land'>
<retval declared_type='void' type='v'/>
</method>
<method selector='messageList'>
<retval declared_type='UAInboxMessageList*' type='@'/>
</method>
<method selector='pushHandler'>
<retval declared_type='UAInboxPushHandler*' type='@'/>
</method>
<method class_method='true' selector='quitInbox'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientCache:'>
<arg declared_type='NSURLCache*' type='@' index='0' name='clientCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInboxCache:'>
<arg declared_type='NSURLCache*' type='@' index='0' name='inboxCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJsDelegate:'>
<arg declared_type='id' type='@' index='0' name='jsDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageList:'>
<arg declared_type='UAInboxMessageList*' type='@' index='0' name='messageList'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPushHandler:'>
<arg declared_type='UAInboxPushHandler*' type='@' index='0' name='pushHandler'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UAInbox*' type='@'/>
</method>
<method selector='uiClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='useCustomUI:'>
<arg declared_type='Class' type='#' index='0' name='customUIClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAInboxDBManager'>
<method selector='addMessages:forUser:app:'>
<arg declared_type='NSArray*' type='@' index='0' name='messages'/>
<arg declared_type='NSString*' type='@' index='1' name='userId'/>
<arg declared_type='NSString*' type='@' index='2' name='appId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='createEditableCopyOfDatabaseIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteMessages:'>
<arg declared_type='NSArray*' type='@' index='0' name='messages'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='forceRelease'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getMessagesForUser:app:'>
<arg declared_type='NSString*' type='@' index='0' name='userId'/>
<arg declared_type='NSString*' type='@' index='1' name='appId'/>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='initDBIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLegacyDatabase'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetDB'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UAInboxDBManager*' type='@'/>
</method>
<method selector='updateMessageAsRead:'>
<arg declared_type='UAInboxMessage*' type='@' index='0' name='msg'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMessagesAsRead:'>
<arg declared_type='NSArray*' type='@' index='0' name='messages'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAInboxMessage'>
<method selector='contentType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='extra'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='inbox'>
<retval declared_type='UAInboxMessageList*' type='@'/>
</method>
<method selector='initWithDict:inbox:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='message'/>
<arg declared_type='UAInboxMessageList*' type='@' index='1' name='inbox'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='markAsRead'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='messageBodyURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='messageID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='messageSent'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='messageURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method class_method='true' selector='performJSDelegate:url:'>
<arg declared_type='UIWebView*' type='@' index='0' name='webView'/>
<arg declared_type='NSURL*' type='@' index='1' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentType:'>
<arg declared_type='NSString*' type='@' index='0' name='contentType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtra:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='extra'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInbox:'>
<arg declared_type='UAInboxMessageList*' type='@' index='0' name='inbox'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageBodyURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='messageBodyURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageID:'>
<arg declared_type='NSString*' type='@' index='0' name='messageID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageSent:'>
<arg declared_type='NSDate*' type='@' index='0' name='messageSent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='messageURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' type='@' index='0' name='title'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnread:'>
<arg declared_type='BOOL' type='B' index='0' name='unread'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='unread'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UAInboxMessageList'>
<method selector='indexOfMessage:'>
<arg declared_type='UAInboxMessage*' type='@' index='0' name='message'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='isBatchUpdating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRetrieving'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='land'>
<retval declared_type='void' type='v'/>
</method>
<method selector='messageAtIndex:'>
<arg declared_type='int' type='i' index='0' name='index'/>
<retval declared_type='UAInboxMessage*' type='@'/>
</method>
<method selector='messageCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='messageForID:'>
<arg declared_type='NSString*' type='@' index='0' name='mid'/>
<retval declared_type='UAInboxMessage*' type='@'/>
</method>
<method selector='messages'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='performBatchUpdateCommand:withMessageIndexSet:'>
<arg declared_type='UABatchUpdateCommand' type='i' index='0' name='command'/>
<arg declared_type='NSIndexSet*' type='@' index='1' name='messageIndexSet'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='retrieveMessageList'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsBatchUpdating:'>
<arg declared_type='BOOL' type='B' index='0' name='isBatchUpdating'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessages:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='messages'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnreadCount:'>
<arg declared_type='int' type='i' index='0' name='unreadCount'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UAInboxMessageList*' type='@'/>
</method>
<method selector='unreadCount'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='UAInboxPushHandler'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='handleLaunchOptions:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='options'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='handleNotification:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasLaunchMessage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasLaunchMessage:'>
<arg declared_type='BOOL' type='B' index='0' name='hasLaunchMessage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewingMessageID:'>
<arg declared_type='NSString*' type='@' index='0' name='viewingMessageID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewingMessageID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UAInboxURLCache'>
<method selector='actualDiskCapacity'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='cacheDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='diskCapacity'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='resourceTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setActualDiskCapacity:'>
<arg declared_type='NSUInteger' type='I' index='0' type64='Q' name='actualDiskCapacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheDirectory:'>
<arg declared_type='NSString*' type='@' index='0' name='cacheDirectory'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResourceTypes:'>
<arg declared_type='NSArray*' type='@' index='0' name='resourceTypes'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAInboxVersion'>
<method class_method='true' selector='get'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UAInventory'>
<method selector='groupInventory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasProductWithIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='productId'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadInventory'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='localizedPrice:'>
<arg declared_type='SKProduct*' type='@' index='0' name='product'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='orderBy'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='productAtIndex:'>
<arg declared_type='int' type='i' index='0' name='index'/>
<retval declared_type='UAProduct*' type='@'/>
</method>
<method selector='productWithIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='productId'/>
<retval declared_type='UAProduct*' type='@'/>
</method>
<method selector='productsForType:'>
<arg declared_type='UAProductType' type='i' index='0' name='type'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='purchase:'>
<arg declared_type='NSString*' type='@' index='0' name='productIdentifier'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchasingProductIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reloadInventory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetReloadCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderBy:'>
<arg declared_type='NSString*' type='@' index='0' name='orderBy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderBy:ascending:'>
<arg declared_type='NSString*' type='@' index='0' name='key'/>
<arg declared_type='BOOL' type='B' index='1' name='ascending'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurchasingProductIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='purchasingProductIdentifier'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatus:'>
<arg declared_type='UAInventoryStatus' type='i' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortInventory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='status'>
<retval declared_type='UAInventoryStatus' type='i'/>
</method>
<method selector='updateAll'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAKeychainUtils'>
<method class_method='true' selector='createKeychainValueForUsername:withPassword:forIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='username'/>
<arg declared_type='NSString*' type='@' index='1' name='password'/>
<arg declared_type='NSString*' type='@' index='2' name='identifier'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='deleteKeychainValue:'>
<arg declared_type='NSString*' type='@' index='0' name='identifier'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='getDeviceID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='getEmailAddress:'>
<arg declared_type='NSString*' type='@' index='0' name='identifier'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='getPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='identifier'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='getUsername:'>
<arg declared_type='NSString*' type='@' index='0' name='identifier'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='updateKeychainValueForUsername:withPassword:withEmailAddress:forIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='username'/>
<arg declared_type='NSString*' type='@' index='1' name='password'/>
<arg declared_type='NSString*' type='@' index='2' name='password'/>
<arg declared_type='NSString*' type='@' index='3' name='identifier'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UALocalStorageDirectory'>
<method class_method='true' selector='localStorageDirectoryWithType:withSubpath:withOldPaths:'>
<arg declared_type='UALocalStorageType' type='i' index='0' name='storageType'/>
<arg declared_type='NSString*' type='@' index='1' name='nameString'/>
<arg declared_type='NSSet*' type='@' index='2' name='oldPathsSet'/>
<retval declared_type='UALocalStorageDirectory*' type='@'/>
</method>
<method selector='oldPaths'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setOldPaths:'>
<arg declared_type='NSSet*' type='@' index='0' name='oldPaths'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorageType:'>
<arg declared_type='UALocalStorageType' type='i' index='0' name='storageType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubpath:'>
<arg declared_type='NSString*' type='@' index='0' name='subpath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storageType'>
<retval declared_type='UALocalStorageType' type='i'/>
</method>
<method selector='subDirectoryWithPathComponent:'>
<arg declared_type='NSString*' type='@' index='0' name='component'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subpath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='uaDirectory'>
<retval declared_type='UALocalStorageDirectory*' type='@'/>
</method>
</class>
<class name='UALocationEvent'>
<method selector='initWithLocation:locationManager:andUpdateType:'>
<arg declared_type='CLLocation*' type='@' index='0' name='location'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='NSString*' type='^{NSString=#}' index='2' name='updateType'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLocation:provider:andUpdateType:'>
<arg declared_type='CLLocation*' type='@' index='0' name='location'/>
<arg declared_type='id' type='@' index='1' name='provider'/>
<arg declared_type='NSString*' type='^{NSString=#}' index='2' name='updateType'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLocationContext:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='locationEventWithLocation:locationManager:andUpdateType:'>
<arg declared_type='CLLocation*' type='@' index='0' name='loction'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='NSString*' type='^{NSString=#}' index='2' name='updateType'/>
<retval declared_type='UALocationEvent*' type='@'/>
</method>
<method class_method='true' selector='locationEventWithLocation:provider:andUpdateType:'>
<arg declared_type='CLLocation*' type='@' index='0' name='location'/>
<arg declared_type='id' type='@' index='1' name='provider'/>
<arg declared_type='NSString*' type='^{NSString=#}' index='2' name='updateType'/>
<retval declared_type='UALocationEvent*' type='@'/>
</method>
<method selector='populateDictionary:withLocationManagerValues:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='dictionary'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='populateDictionary:withLocationProviderValues:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='dictionary'/>
<arg declared_type='id' type='@' index='1' name='locationProvider'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='populateDictionary:withLocationValues:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='dictionary'/>
<arg declared_type='CLLocation*' type='@' index='1' name='location'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringAsIntFromDouble:'>
<arg declared_type='double' type='d' index='0' name='doubleValue'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromDoubleToSevenDigits:'>
<arg declared_type='double' type='d' index='0' name='doubleValue'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UALocationService'>
<method class_method='true' selector='airshipLocationServiceEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='automaticLocationOnForegroundEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundLocationServiceEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='coreLocationWillPromptUserForPermissionToRun'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dateOfLastLocation'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPurpose:'>
<arg declared_type='NSString*' type='@' index='0' name='purpose'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lastReportedLocation'>
<retval declared_type='CLLocation*' type='@'/>
</method>
<method selector='location'>
<retval declared_type='CLLocation*' type='@'/>
</method>
<method class_method='true' selector='locationServiceAuthorized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='locationServicesEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='minimumTimeBetweenForegroundUpdates'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='promptUserForLocationServices'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='purpose'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reportCurrentLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reportLocation:fromLocationManager:withUpdateType:'>
<arg declared_type='CLLocation*' type='@' index='0' name='location'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='NSString*' type='^{NSString=#}' index='2' name='updateTypeOrNil'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reportLocationToAnalytics:fromProvider:'>
<arg declared_type='CLLocation*' type='@' index='0' name='location'/>
<arg declared_type='id' type='@' index='1' name='provider'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAirshipLocationServiceEnabled:'>
<arg declared_type='BOOL' type='B' index='0' name='airshipLocationServiceEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticLocationOnForegroundEnabled:'>
<arg declared_type='BOOL' type='B' index='0' name='automaticLocationOnForegroundEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundLocationServiceEnabled:'>
<arg declared_type='BOOL' type='B' index='0' name='backgroundLocationServiceEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumTimeBetweenForegroundUpdates:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='minimumTimeBetweenForegroundUpdates'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPromptUserForLocationServices:'>
<arg declared_type='BOOL' type='B' index='0' name='promptUserForLocationServices'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurpose:'>
<arg declared_type='NSString*' type='@' index='0' name='purpose'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSingleLocationDesiredAccuracy:'>
<arg declared_type='CLLocationAccuracy' type='d' index='0' name='desiredAccuracy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandardLocationDesiredAccuracy:'>
<arg declared_type='CLLocationAccuracy' type='d' index='0' name='desiredAccuracy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandardLocationDistanceFilter:'>
<arg declared_type='CLLocationDistance' type='d' index='0' name='distanceFilter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeoutForSingleLocationService:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='timeoutForSingleLocationService'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='significantChangeServiceStatus'>
<retval declared_type='UALocationProviderStatus' type='i'/>
</method>
<method selector='singleLocationDesiredAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method selector='singleLocationServiceStatus'>
<retval declared_type='UALocationProviderStatus' type='i'/>
</method>
<method selector='standardLocationDesiredAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method selector='standardLocationDistanceFilter'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='standardLocationServiceStatus'>
<retval declared_type='UALocationProviderStatus' type='i'/>
</method>
<method selector='startReportingSignificantLocationChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startReportingStandardLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopReportingSignificantLocationChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopReportingStandardLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeoutForSingleLocationService'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='UAObservable'>
<method selector='addObserver:'>
<arg declared_type='id' type='@' index='0' name='observer'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='countObservers'>
<retval declared_type='int' type='i'/>
</method>
<method selector='notifyObservers:'>
<arg declared_type='SEL' type=':' index='0' name='selector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifyObservers:withObject:'>
<arg declared_type='SEL' type=':' index='0' name='selector'/>
<arg declared_type='id' type='@' index='1' name='arg1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifyObservers:withObject:withObject:'>
<arg declared_type='SEL' type=':' index='0' name='selector'/>
<arg declared_type='id' type='@' index='1' name='arg1'/>
<arg declared_type='id' type='@' index='2' name='arg2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObserver:'>
<arg declared_type='id' type='@' index='0' name='observer'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObservers'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAProduct'>
<method selector='compare:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='downloadURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='fileSize'>
<retval declared_type='double' type='d'/>
</method>
<method selector='hasUpdate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='icon'>
<retval declared_type='UAAsyncImageView*' type='@'/>
</method>
<method selector='iconURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFree'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preview'>
<retval declared_type='UAAsyncImageView*' type='@'/>
</method>
<method selector='previewURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='price'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='priceNumber'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='productDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='productFromDictionary:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='item'/>
<retval declared_type='UAProduct*' type='@'/>
</method>
<method selector='productIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='receipt'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='resetStatus'>
<retval declared_type='void' type='v'/>
</method>
<method selector='revision'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setDownloadURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='downloadURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileSize:'>
<arg declared_type='double' type='d' index='0' name='fileSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIcon:'>
<arg declared_type='UAAsyncImageView*' type='@' index='0' name='icon'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIconURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='iconURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsFree:'>
<arg declared_type='BOOL' type='B' index='0' name='isFree'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreview:'>
<arg declared_type='UAAsyncImageView*' type='@' index='0' name='preview'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreviewURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='previewURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrice:'>
<arg declared_type='NSString*' type='@' index='0' name='price'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPriceNumber:'>
<arg declared_type='NSDecimalNumber*' type='@' index='0' name='priceNumber'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProductDescription:'>
<arg declared_type='NSString*' type='@' index='0' name='productDescription'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProductIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='productIdentifier'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' index='0' name='_progress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReceipt:'>
<arg declared_type='NSString*' type='@' index='0' name='receipt'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRevision:'>
<arg declared_type='int' type='i' index='0' name='revision'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkProduct:'>
<arg declared_type='SKProduct*' type='@' index='0' name='skProduct'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatus:'>
<arg declared_type='UAProductStatus' type='i' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' type='@' index='0' name='title'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransaction:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='skProduct'>
<retval declared_type='SKProduct*' type='@'/>
</method>
<method selector='status'>
<retval declared_type='UAProductStatus' type='i'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='transaction'>
<retval declared_type='SKPaymentTransaction*' type='@'/>
</method>
</class>
<class name='UAProductInventory'>
<method selector='addProduct:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='containsProduct:'>
<arg declared_type='NSString*' type='@' index='0' name='productID'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='loadInventory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadWithArray:'>
<arg declared_type='NSArray*' type='@' index='0' name='invArray'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='localizedPrice:'>
<arg declared_type='SKProduct*' type='@' index='0' name='product'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='productDict'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='productForKey:'>
<arg declared_type='NSString*' type='@' index='0' name='productKey'/>
<retval declared_type='UASubscriptionProduct*' type='@'/>
</method>
<method selector='productIDArray'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='productsForSubscription:'>
<arg declared_type='NSString*' type='@' index='0' name='subscriptionKey'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeProduct:'>
<arg declared_type='NSString*' type='@' index='0' name='productID'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAPush'>
<method selector='addTagToCurrentDevice:'>
<arg declared_type='NSString*' type='@' index='0' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTagsToCurrentDevice:'>
<arg declared_type='NSArray*' type='@' index='0' name='tags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alias'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='autobadgeEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canEditTagsFromDevice'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='closeApnsSettingsAnimated:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='closeTokenSettingsAnimated:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deviceToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deviceTokenHasChanged'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='disableQuietTime'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableAutobadge:'>
<arg declared_type='BOOL' type='B' index='0' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='forceRelease'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleNotification:applicationState:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='notification'/>
<arg declared_type='UIApplicationState' type='i' index='1' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='land'>
<retval declared_type='void' type='v'/>
</method>
<method selector='notificationTypes'>
<retval declared_type='UIRemoteNotificationType' type='i'/>
</method>
<method class_method='true' selector='openApnsSettings:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='openTokenSettings:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='pushTypeString:'>
<arg declared_type='UIRemoteNotificationType' type='i' index='0' name='types'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='quietTime'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='quietTimeEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='registerDeviceToken:'>
<arg declared_type='NSData*' type='@' index='0' name='token'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceToken:withAlias:'>
<arg declared_type='NSData*' type='@' index='0' name='token'/>
<arg declared_type='NSString*' type='@' index='1' name='alias'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceToken:withExtraInfo:'>
<arg declared_type='NSData*' type='@' index='0' name='token'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='info'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceTokenWithExtraInfo:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='info'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerForRemoteNotificationTypes:'>
<arg declared_type='UIRemoteNotificationType' type='i' index='0' name='types'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTagFromCurrentDevice:'>
<arg declared_type='NSString*' type='@' index='0' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTagsFromCurrentDevice:'>
<arg declared_type='NSArray*' type='@' index='0' name='tags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetBadge'>
<retval declared_type='void' type='v'/>
</method>
<method selector='retryOnConnectionError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlias:'>
<arg declared_type='NSString*' type='@' index='0' name='alias'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutobadgeEnabled:'>
<arg declared_type='BOOL' type='B' index='0' name='autobadgeEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeNumber:'>
<arg declared_type='NSInteger' type='i' index='0' type64='q' name='badgeNumber'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanEditTagsFromDevice:'>
<arg declared_type='BOOL' type='B' index='0' name='canEditTagsFromDevice'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPushEnabled:'>
<arg declared_type='BOOL' type='B' index='0' name='pushEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuietTimeEnabled:'>
<arg declared_type='BOOL' type='B' index='0' name='quietTimeEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuietTimeFrom:to:withTimeZone:'>
<arg declared_type='NSDate*' type='@' index='0' name='from'/>
<arg declared_type='NSDate*' type='@' index='1' name='to'/>
<arg declared_type='NSTimeZone*' type='@' index='2' name='tz'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRetryOnConnectionError:'>
<arg declared_type='BOOL' type='B' index='0' name='retryOnConnectionError'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTags:'>
<arg declared_type='NSArray*' type='@' index='0' name='tags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone*' type='@' index='0' name='timeZone'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTz:'>
<arg declared_type='NSString*' type='@' index='0' name='tz'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UAPush*' type='@'/>
</method>
<method selector='tags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='tz'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='unRegisterDeviceToken'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateAlias:'>
<arg declared_type='NSString*' type='@' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateRegistration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateTags:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='values'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='useCustomUI:'>
<arg declared_type='Class' type='#' index='0' name='customUIClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAPushVersion'>
<method class_method='true' selector='get'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UASQLite'>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyRetryTimeout'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='commit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dbPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method variadic='true' selector='executeQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='executeQuery:arguments:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<arg declared_type='NSArray*' type='@' index='1' name='args'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method variadic='true' selector='executeUpdate:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:arguments:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<arg declared_type='NSArray*' type='@' index='1' name='args'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexExists:'>
<arg declared_type='NSString*' type='@' index='0' name='indexName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithDBPath:'>
<arg declared_type='NSString*' type='@' index='0' name='aDBPath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lastErrorCode'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='lastErrorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='open:'>
<arg declared_type='NSString*' type='@' index='0' name='aDBPath'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyRetryTimeout:'>
<arg declared_type='NSInteger' type='i' index='0' type64='q' name='busyRetryTimeout'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableExists:'>
<arg declared_type='NSString*' type='@' index='0' name='tableName'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UASignificantChangeProvider'>
<method class_method='true' selector='providerWithDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegateOrNil'/>
<retval declared_type='UASignificantChangeProvider*' type='@'/>
</method>
<method selector='startReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAStandardLocationProvider'>
<method class_method='true' selector='providerWithDelegate:'>
<arg declared_type='id' type='@' index='0' name='serviceDelegateOrNil'/>
<retval declared_type='UAStandardLocationProvider*' type='@'/>
</method>
<method selector='startReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAStoreFront'>
<method selector='addReceipt:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='directoryExistsAtPath:orOldPath:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<arg declared_type='NSString*' type='@' index='1' name='oldPath'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='displayStoreFront:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='displayStoreFront:withProductID:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='NSString*' type='@' index='1' name='ID'/>
<arg declared_type='BOOL' type='B' index='2' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadManager'>
<retval declared_type='UAStoreFrontDownloadManager*' type='@'/>
</method>
<method selector='forceRelease'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasReceipt:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='initialized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inventory'>
<retval declared_type='UAInventory*' type='@'/>
</method>
<method class_method='true' selector='land'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='loadInventory'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='productsForType:'>
<arg declared_type='UAProductType' type='i' index='0' name='type'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='purchase:'>
<arg declared_type='NSString*' type='@' index='0' name='productIdentifier'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchaseReceipts'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method class_method='true' selector='quitStoreFront'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='registerObserver:'>
<arg declared_type='id' type='@' index='0' name='observer'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='reloadInventoryIfFailed'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='resetAndLoadInventory'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='restoreAllProducts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='NSObject*' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDownloadDirectory:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setDownloadDirectory:withProductIDSubdir:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<arg declared_type='BOOL' type='B' index='1' name='makeSubdir'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInventory:'>
<arg declared_type='UAInventory*' type='@' index='0' name='inventory'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setOrderBy:'>
<arg declared_type='NSString*' type='@' index='0' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setOrderBy:ascending:'>
<arg declared_type='NSString*' type='@' index='0' name='key'/>
<arg declared_type='BOOL' type='B' index='1' name='ascending'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurchaseReceipts:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='purchaseReceipts'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sfObserver'>
<retval declared_type='UAStoreKitObserver*' type='@'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UAStoreFront*' type='@'/>
</method>
<method selector='uiClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='unregisterObserver:'>
<arg declared_type='id' type='@' index='0' name='observer'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateAllProducts'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='useCustomUI:'>
<arg declared_type='Class' type='#' index='0' name='customUIClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAStoreFrontDownloadManager'>
<method selector='addPendingProduct:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentURLCache'>
<retval declared_type='UAContentURLCache*' type='@'/>
</method>
<method selector='createProductIDSubdir'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentlyDecompressingProducts'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='decompressingProducts'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='downloadDidFail:'>
<arg declared_type='UADownloadContent*' type='@' index='0' name='downloadContent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadPurchasedProduct:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasDecompressingProduct:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPendingProduct:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadDecompressingProducts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPendingProducts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pendingProducts'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='resumeDecompressingProducts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumePendingProducts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentURLCache:'>
<arg declared_type='UAContentURLCache*' type='@' index='0' name='contentURLCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCreateProductIDSubdir:'>
<arg declared_type='BOOL' type='B' index='0' name='createProductIDSubdir'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentlyDecompressingProducts:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='currentlyDecompressingProducts'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecompressingProducts:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='decompressingProducts'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadDirectory:'>
<arg declared_type='NSString*' type='@' index='0' name='downloadDirectory'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPendingProducts:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='pendingProducts'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='verifyTransactionReceipt:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAStoreKitObserver'>
<method selector='completeTransaction:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='failedTransaction:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishTransaction:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishUnknownTransaction:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='payForProduct:'>
<arg declared_type='SKProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='productFromTransaction:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='UAProduct*' type='@'/>
</method>
<method selector='restoreAll'>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoring'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setRestoring:'>
<arg declared_type='BOOL' type='B' index='0' name='restoring'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UASubscription'>
<method selector='availableContents'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='availableProducts'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='downloadedContents'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='filterDownloadedContents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithKey:name:'>
<arg declared_type='NSString*' type='@' index='0' name='aKey'/>
<arg declared_type='NSString*' type='@' index='1' name='aName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='products'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='purchasedProducts'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setContentWithArray:'>
<arg declared_type='NSArray*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProductsWithArray:'>
<arg declared_type='NSArray*' type='@' index='0' name='productArray'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurchasedProductsWithArray:'>
<arg declared_type='NSArray*' type='@' index='0' name='infos'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscribed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='undownloadedContents'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='UASubscriptionContent'>
<method selector='contentKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='contentName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='downloaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='downloading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileSize'>
<retval declared_type='int' type='i'/>
</method>
<method selector='iconURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithDict:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='dict'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='previewURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='productIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='publishDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='revision'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setContentKey:'>
<arg declared_type='NSString*' type='@' index='0' name='contentKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentName:'>
<arg declared_type='NSString*' type='@' index='0' name='contentName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDescription:'>
<arg declared_type='NSString*' type='@' index='0' name='description'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='downloadURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloaded:'>
<arg declared_type='BOOL' type='B' index='0' name='downloaded'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileSize:'>
<arg declared_type='int' type='i' index='0' name='fileSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIconURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='iconURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreviewURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='previewURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProductIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='productIdentifier'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublishDate:'>
<arg declared_type='NSDate*' type='@' index='0' name='publishDate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRevision:'>
<arg declared_type='int' type='i' index='0' name='revision'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubscriptionKey:'>
<arg declared_type='NSString*' type='@' index='0' name='subscriptionKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionKey'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UASubscriptionDownloadManager'>
<method selector='checkDownloading:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentURLCache'>
<retval declared_type='UAContentURLCache*' type='@'/>
</method>
<method selector='createProductIDSubdir'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentlyDecompressingContent'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='decompressingSubscriptionContent'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='download:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasDecompressingSubscriptionContent:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='subscriptionContent'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPendingSubscriptionContent:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='subscriptionContent'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadDecompressingSubscriptionContent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPendingSubscriptionContent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pendingSubscriptionContent'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='resumeDecompressingSubscriptionContent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumePendingSubscriptionContent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentURLCache:'>
<arg declared_type='UAContentURLCache*' type='@' index='0' name='contentURLCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCreateProductIDSubdir:'>
<arg declared_type='BOOL' type='B' index='0' name='createProductIDSubdir'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentlyDecompressingContent:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='currentlyDecompressingContent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecompressingSubscriptionContent:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='decompressingSubscriptionContent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadDirectory:'>
<arg declared_type='NSString*' type='@' index='0' name='downloadDirectory'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPendingSubscriptionContent:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='pendingSubscriptionContent'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UASubscriptionInventory'>
<method selector='containsProduct:'>
<arg declared_type='NSString*' type='@' index='0' name='productID'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentForKey:'>
<arg declared_type='NSString*' type='@' index='0' name='contentKey'/>
<retval declared_type='UASubscriptionContent*' type='@'/>
</method>
<method selector='contentInventoryUpdated'>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isReceiptValid:'>
<arg declared_type='NSString*' type='@' index='0' name='responseString'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadInventory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadProducts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPurchases'>
<retval declared_type='void' type='v'/>
</method>
<method selector='productForKey:'>
<arg declared_type='NSString*' type='@' index='0' name='productKey'/>
<retval declared_type='UASubscriptionProduct*' type='@'/>
</method>
<method selector='productInventoryUpdated'>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchase:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='serverDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='setServerDate:'>
<arg declared_type='NSDate*' type='@' index='0' name='serverDate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserPurchaseInfo:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='purchaseInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionForContent:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='UASubscription*' type='@'/>
</method>
<method selector='subscriptionForKey:'>
<arg declared_type='NSString*' type='@' index='0' name='subscriptionKey'/>
<retval declared_type='UASubscription*' type='@'/>
</method>
<method selector='subscriptionForProduct:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='UASubscription*' type='@'/>
</method>
<method selector='subscriptionTransactionDidComplete:'>
<arg declared_type='SKPaymentTransaction*' type='@' index='0' name='transaction'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptions'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='userSubscriptions'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='UASubscriptionManager'>
<method class_method='true' selector='displaySubscription:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadContentFailed:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadContentFinished:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadManager'>
<retval declared_type='UASubscriptionDownloadManager*' type='@'/>
</method>
<method selector='enterBackground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enterForeground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='forceRelease'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='hideSubscription'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='initialized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inventory'>
<retval declared_type='UASubscriptionInventory*' type='@'/>
</method>
<method selector='inventoryUpdateFailedWithError:'>
<arg declared_type='NSError*' type='@' index='0' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='land'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadSubscription'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pendingProduct'>
<retval declared_type='UASubscriptionProduct*' type='@'/>
</method>
<method selector='purchase:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchasePendingSubscription'>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchaseProductFailed:withError:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<arg declared_type='NSError*' type='@' index='1' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchaseProductFinished:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purchaseProductWithId:'>
<arg declared_type='NSString*' type='@' index='0' name='productId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAutorenewableProductFailed:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAutorenewables'>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAutorenewablesFailedWithError:'>
<arg declared_type='NSError*' type='@' index='0' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAutorenewablesFinished:'>
<arg declared_type='NSArray*' type='@' index='0' name='productsRestored'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDownloadDirectory:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setDownloadDirectory:withProductIDSubdir:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<arg declared_type='BOOL' type='B' index='1' name='makeSubdir'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDownloadManager:'>
<arg declared_type='UASubscriptionDownloadManager*' type='@' index='0' name='downloadManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPendingProduct:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='pendingProduct'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPendingSubscription:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UASubscriptionManager*' type='@'/>
</method>
<method selector='subscriptionWillEnterBackground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionWillEnterForeground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptionsUpdated:'>
<arg declared_type='NSArray*' type='@' index='0' name='subscriptions'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transactionObserver'>
<retval declared_type='UASubscriptionObserver*' type='@'/>
</method>
<method selector='uiClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='useCustomUI:'>
<arg declared_type='Class' type='#' index='0' name='customUIClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userSubscriptionsUpdated:'>
<arg declared_type='NSArray*' type='@' index='0' name='userSubscritions'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UASubscriptionObserver'>
<method selector='alertDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='restoreAutorenewables'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertDelegate:'>
<arg declared_type='id' type='@' index='0' name='alertDelegate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UASubscriptionProduct'>
<method selector='autorenewableDuration'>
<retval declared_type='UAAutorenewableDuration' type='i'/>
</method>
<method selector='duration'>
<retval declared_type='int' type='i'/>
</method>
<method selector='endDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='iconURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithDict:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='dict'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSubscriptionProduct:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='sp'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isForSale'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPurchasing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='previewURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='price'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='priceNumber'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='productDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='productIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='productType'>
<retval declared_type='UASubscriptionProductType' type='i'/>
</method>
<method selector='purchased'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAutorenewableDuration:'>
<arg declared_type='UAAutorenewableDuration' type='i' index='0' name='autorenewableDuration'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type='int' type='i' index='0' name='duration'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndDate:'>
<arg declared_type='NSDate*' type='@' index='0' name='endDate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIconURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='iconURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsForSale:'>
<arg declared_type='BOOL' type='B' index='0' name='isForSale'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsPurchasing:'>
<arg declared_type='BOOL' type='B' index='0' name='isPurchasing'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreviewURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='previewURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrice:'>
<arg declared_type='NSString*' type='@' index='0' name='price'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPriceNumber:'>
<arg declared_type='NSDecimalNumber*' type='@' index='0' name='priceNumber'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProductDescription:'>
<arg declared_type='NSString*' type='@' index='0' name='productDescription'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProductIdentifier:'>
<arg declared_type='NSString*' type='@' index='0' name='productIdentifier'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProductType:'>
<arg declared_type='UASubscriptionProductType' type='i' index='0' name='productType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurchased:'>
<arg declared_type='BOOL' type='B' index='0' name='purchased'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurchasingInfo:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='purchasingInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkProduct:'>
<arg declared_type='SKProduct*' type='@' index='0' name='skProduct'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartDate:'>
<arg declared_type='NSDate*' type='@' index='0' name='startDate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubscribeURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='subscribeURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubscriptionKey:'>
<arg declared_type='NSString*' type='@' index='0' name='subscriptionKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubscriptionName:'>
<arg declared_type='NSString*' type='@' index='0' name='subscriptionName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' type='@' index='0' name='title'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='skProduct'>
<retval declared_type='SKProduct*' type='@'/>
</method>
<method selector='startDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='subscribeURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='subscriptionKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subscriptionName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UATagUtils'>
<method class_method='true' selector='createTags:'>
<arg declared_type='UATagType' type='i' index='0' name='tags'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='UAUser'>
<method selector='alias'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cancelRecovery'>
<retval declared_type='void' type='v'/>
</method>
<method selector='checkRecoveryStatus:'>
<arg declared_type='NSTimer*' type='@' index='0' name='timer'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='createUser'>
<retval declared_type='void' type='v'/>
</method>
<method selector='createUserDictionary'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='createUserWithEmail:'>
<arg declared_type='NSString*' type='@' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultUser'>
<retval declared_type='UAUser*' type='@'/>
</method>
<method selector='defaultUserCreated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didMergeWithUser:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='userData'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='email'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='inRecovery'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initializeUser'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='land'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadUser'>
<retval declared_type='void' type='v'/>
</method>
<method selector='modifyUserWithEmail:'>
<arg declared_type='NSString*' type='@' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifyObserversUserUpdated'>
<retval declared_type='void' type='v'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='recoveryEmail'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='recoveryPoller'>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method selector='recoveryStarted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recoveryStatusUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requestWentWrong:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='retrieveUser'>
<retval declared_type='void' type='v'/>
</method>
<method selector='retrievingUser'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveUserData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sentRecoveryEmail'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlias:'>
<arg declared_type='NSString*' type='@' index='0' name='alias'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultUsername:withPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='defaultUsername'/>
<arg declared_type='NSString*' type='@' index='1' name='defaultPassword'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmail:'>
<arg declared_type='NSString*' type='@' index='0' name='email'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInRecovery:'>
<arg declared_type='BOOL' type='B' index='0' name='inRecovery'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='password'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecoveryEmail:'>
<arg declared_type='NSString*' type='@' index='0' name='recoveryEmail'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecoveryPoller:'>
<arg declared_type='NSTimer*' type='@' index='0' name='recoveryPoller'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecoveryStarted:'>
<arg declared_type='BOOL' type='B' index='0' name='recoveryStarted'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecoveryStatusUrl:'>
<arg declared_type='NSString*' type='@' index='0' name='recoveryStatusUrl'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRetrievingUser:'>
<arg declared_type='BOOL' type='B' index='0' name='retrievingUser'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSentRecoveryEmail:'>
<arg declared_type='BOOL' type='B' index='0' name='sentRecoveryEmail'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTags:'>
<arg declared_type='NSMutableSet*' type='@' index='0' name='tags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUrl:'>
<arg declared_type='NSString*' type='@' index='0' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserEmail:'>
<arg declared_type='NSString*' type='@' index='0' name='address'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setUsername:'>
<arg declared_type='NSString*' type='@' index='0' name='username'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startRecovery'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startRecoveryPoller'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopRecoveryPoller'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tags'>
<retval declared_type='NSMutableSet*' type='@'/>
</method>
<method selector='updateUserInfo:withDelegate:finish:fail:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='info'/>
<arg declared_type='id' type='@' index='1' name='delegate'/>
<arg declared_type='SEL' type=':' index='2' name='finishSelector'/>
<arg declared_type='SEL' type=':' index='3' name='failSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUserState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUserWithDelegate:finish:fail:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<arg declared_type='SEL' type=':' index='1' name='finishSelector'/>
<arg declared_type='SEL' type=':' index='2' name='failSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userRequestWentWrong:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userState'>
<retval declared_type='UAUserState' type='i'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UAUtils'>
<method class_method='true' selector='UUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='deviceID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='deviceModelName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='getReadableFileSizeFromBytes:'>
<arg declared_type='double' type='d' index='0' name='bytes'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='md5:'>
<arg declared_type='NSString*' type='@' index='0' name='sourceString'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='parseJSON:'>
<arg declared_type='NSString*' type='@' index='0' name='responseString'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pluralize:singularForm:pluralForm:'>
<arg declared_type='int' type='i' index='0' name='count'/>
<arg declared_type='NSString*' type='@' index='1' name='singular'/>
<arg declared_type='NSString*' type='@' index='2' name='plural'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='requestWentWrong:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requestWentWrong:keyword:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSString*' type='@' index='1' name='keyword'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requestWithURL:method:delegate:finish:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<arg declared_type='NSString*' type='@' index='1' name='method'/>
<arg declared_type='id' type='@' index='2' name='delegate'/>
<arg declared_type='SEL' type=':' index='3' name='selector'/>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
<method class_method='true' selector='requestWithURL:method:delegate:finish:fail:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<arg declared_type='NSString*' type='@' index='1' name='method'/>
<arg declared_type='id' type='@' index='2' name='delegate'/>
<arg declared_type='SEL' type=':' index='3' name='sel1'/>
<arg declared_type='SEL' type=':' index='4' name='sel2'/>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
<method class_method='true' selector='responseFromRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='urlEncodedStringWithString:encoding:'>
<arg declared_type='NSString*' type='@' index='0' name='string'/>
<arg declared_type='NSStringEncoding' type='I' index='1' type64='Q' name='encoding'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='userAuthHeaderString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='userRequestWithURL:method:delegate:finish:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<arg declared_type='NSString*' type='@' index='1' name='method'/>
<arg declared_type='id' type='@' index='2' name='delegate'/>
<arg declared_type='SEL' type=':' index='3' name='selector'/>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
<method class_method='true' selector='userRequestWithURL:method:delegate:finish:fail:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<arg declared_type='NSString*' type='@' index='1' name='method'/>
<arg declared_type='id' type='@' index='2' name='delegate'/>
<arg declared_type='SEL' type=':' index='3' name='sel1'/>
<arg declared_type='SEL' type=':' index='4' name='sel2'/>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
</class>
<class name='UAViewUtils'>
<method class_method='true' selector='roundView:borderRadius:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<arg declared_type='float' type='f' index='1' name='radius'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='roundView:borderRadius:borderWidth:color:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<arg declared_type='float' type='f' index='1' name='radius'/>
<arg declared_type='float' type='f' index='2' name='border'/>
<arg declared_type='UIColor*' type='@' index='3' name='color'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAZipDownloadContent'>
<method selector='decompress'>
<retval declared_type='void' type='v'/>
</method>
<method selector='decompressDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='decompressedContentPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDecompressDelegate:'>
<arg declared_type='id' type='@' index='0' name='decompressDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecompressedContentPath:'>
<arg declared_type='NSString*' type='@' index='0' name='decompressedContentPath'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UA_ASIAuthenticationDialog'>
<method selector='didEnableRotationNotifications'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='presentAuthenticationDialogForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentingController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='request'>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
<method selector='setDidEnableRotationNotifications:'>
<arg declared_type='BOOL' type='B' index='0' name='didEnableRotationNotifications'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPresentingController:'>
<arg declared_type='UIViewController*' type='@' index='0' name='presentingController'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='UA_ASIAuthenticationType' type='i' index='0' name='type'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='UA_ASIAuthenticationType' type='i'/>
</method>
</class>
<class name='UA_ASIDataCompressor'>
<method selector='closeStream'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='compressBytes:length:error:shouldFinish:'>
<arg declared_type='Bytef*' type='*' index='0' name='bytes'/>
<arg declared_type='NSUInteger' type='I' index='1' type64='Q' name='length'/>
<arg declared_type='NSError**' type='^@' index='2' name='err'/>
<arg declared_type='BOOL' type='B' index='3' name='shouldFinish'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='compressData:error:'>
<arg declared_type='NSData*' type='@' index='0' name='uncompressedData'/>
<arg declared_type='NSError**' type='^@' index='1' name='err'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='compressDataFromFile:toFile:error:'>
<arg declared_type='NSString*' type='@' index='0' name='sourcePath'/>
<arg declared_type='NSString*' type='@' index='1' name='destinationPath'/>
<arg declared_type='NSError**' type='^@' index='2' name='err'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='compressor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setupStream'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='streamReady'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UA_ASIDataDecompressor'>
<method selector='closeStream'>
<retval declared_type='NSError*' type='@'/>
</method>
<method class_method='true' selector='decompressor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setupStream'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='streamReady'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uncompressBytes:length:error:'>
<arg declared_type='Bytef*' type='*' index='0' name='bytes'/>
<arg declared_type='NSUInteger' type='I' index='1' type64='Q' name='length'/>
<arg declared_type='NSError**' type='^@' index='2' name='err'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='uncompressData:error:'>
<arg declared_type='NSData*' type='@' index='0' name='compressedData'/>
<arg declared_type='NSError**' type='^@' index='1' name='err'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='uncompressDataFromFile:toFile:error:'>
<arg declared_type='NSString*' type='@' index='0' name='sourcePath'/>
<arg declared_type='NSString*' type='@' index='1' name='destinationPath'/>
<arg declared_type='NSError**' type='^@' index='2' name='err'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UA_ASIDownloadCache'>
<method selector='accessLock'>
<retval declared_type='NSRecursiveLock*' type='@'/>
</method>
<method selector='defaultCachePolicy'>
<retval declared_type='UA_ASICachePolicy' type='i'/>
</method>
<method class_method='true' selector='fileExtensionsToHandleAsHTML'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='serverAllowsResponseCachingForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccessLock:'>
<arg declared_type='NSRecursiveLock*' type='@' index='0' name='accessLock'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCachePolicy:'>
<arg declared_type='UA_ASICachePolicy' type='i' index='0' name='defaultCachePolicy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldRespectCacheControlHeaders:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldRespectCacheControlHeaders'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStoragePath:'>
<arg declared_type='NSString*' type='@' index='0' name='storagePath'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='shouldRespectCacheControlHeaders'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='storagePath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UA_ASIFormDataRequest'>
<method selector='addData:forKey:'>
<arg declared_type='NSData*' type='@' index='0' name='data'/>
<arg declared_type='NSString*' type='@' index='1' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addData:withFileName:andContentType:forKey:'>
<arg declared_type='id' type='@' index='0' name='data'/>
<arg declared_type='NSString*' type='@' index='1' name='fileName'/>
<arg declared_type='NSString*' type='@' index='2' name='contentType'/>
<arg declared_type='NSString*' type='@' index='3' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addFile:forKey:'>
<arg declared_type='NSString*' type='@' index='0' name='filePath'/>
<arg declared_type='NSString*' type='@' index='1' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addFile:withFileName:andContentType:forKey:'>
<arg declared_type='NSString*' type='@' index='0' name='filePath'/>
<arg declared_type='NSString*' type='@' index='1' name='fileName'/>
<arg declared_type='NSString*' type='@' index='2' name='contentType'/>
<arg declared_type='NSString*' type='@' index='3' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPostValue:forKey:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<arg declared_type='NSString*' type='@' index='1' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeURL:'>
<arg declared_type='NSString*' type='@' index='0' name='string'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='postFormat'>
<retval declared_type='UA_ASIPostFormat' type='i'/>
</method>
<method selector='setData:forKey:'>
<arg declared_type='NSData*' type='@' index='0' name='data'/>
<arg declared_type='NSString*' type='@' index='1' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:withFileName:andContentType:forKey:'>
<arg declared_type='id' type='@' index='0' name='data'/>
<arg declared_type='NSString*' type='@' index='1' name='fileName'/>
<arg declared_type='NSString*' type='@' index='2' name='contentType'/>
<arg declared_type='NSString*' type='@' index='3' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFile:forKey:'>
<arg declared_type='NSString*' type='@' index='0' name='filePath'/>
<arg declared_type='NSString*' type='@' index='1' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFile:withFileName:andContentType:forKey:'>
<arg declared_type='NSString*' type='@' index='0' name='filePath'/>
<arg declared_type='NSString*' type='@' index='1' name='fileName'/>
<arg declared_type='NSString*' type='@' index='2' name='contentType'/>
<arg declared_type='NSString*' type='@' index='3' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostFormat:'>
<arg declared_type='UA_ASIPostFormat' type='i' index='0' name='postFormat'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostValue:forKey:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<arg declared_type='NSString*' type='@' index='1' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' type='I' index='0' type64='Q' name='stringEncoding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
</class>
<class name='UA_ASIHTTPRequest'>
<method selector='HEADRequest'>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
<method selector='PACurl'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='addBasicAuthenticationHeaderWithUsername:andPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='theUsername'/>
<arg declared_type='NSString*' type='@' index='1' name='thePassword'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestHeader:value:'>
<arg declared_type='NSString*' type='@' index='0' name='header'/>
<arg declared_type='NSString*' type='@' index='1' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addSessionCookie:'>
<arg declared_type='NSHTTPCookie*' type='@' index='0' name='newCookie'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowCompressedResponse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowResumeForFileDownloads'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPostData:'>
<arg declared_type='NSData*' type='@' index='0' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPostDataFromFile:'>
<arg declared_type='NSString*' type='@' index='0' name='file'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyCookieHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyCredentials:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='newCredentials'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applyProxyCredentials:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='newCredentials'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attemptToApplyCredentialsAndResume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='attemptToApplyProxyCredentialsAndResume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='authenticationNeeded'>
<retval declared_type='UA_ASIAuthenticationState' type='i'/>
</method>
<method selector='authenticationRealm'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='authenticationRetryCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='authenticationScheme'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='averageBandwidthUsedPerSecond'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</method>
<method class_method='true' selector='base64forData:'>
<arg declared_type='NSData*' type='@' index='0' name='theData'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='buildPostBody'>
<retval declared_type='void' type='v'/>
</method>
<method selector='buildRequestHeaders'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachePolicy'>
<retval declared_type='UA_ASICachePolicy' type='i'/>
</method>
<method selector='cacheStoragePolicy'>
<retval declared_type='UA_ASICacheStoragePolicy' type='i'/>
</method>
<method selector='cancelAuthentication'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDelegatesAndCancel'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clearSession'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientCertificates'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='complete'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='connectionCanBeReused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='connectionID'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='contentLength'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='dataDecompressor'>
<retval declared_type='UA_ASIDataDecompressor*' type='@'/>
</method>
<method class_method='true' selector='dateFromRFC1123String:'>
<arg declared_type='NSString*' type='@' index='0' name='string'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='defaultCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultResponseEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method class_method='true' selector='defaultTimeOutSeconds'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='defaultUserAgentString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='didCreateTemporaryPostDataFile'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didFailSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='didFinishSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='didReceiveDataSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='didReceiveResponseHeadersSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='didStartSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='didUseCachedResponse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='domain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='downloadDestinationPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadProgressDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method class_method='true' selector='expirePersistentConnections'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='expiryDateForRequest:maxAge:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='maxAge'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='failWithError:'>
<arg declared_type='NSError*' type='@' index='0' name='theError'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='findCredentials'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='findProxyCredentials'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='findSessionAuthenticationCredentials'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='findSessionProxyAuthenticationCredentials'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='handleBytesAvailable'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleNetworkEvent:'>
<arg declared_type='CFStreamEventType' type='L' index='0' type64='Q' name='type'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleStreamComplete'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleStreamError'>
<retval declared_type='void' type='v'/>
</method>
<method selector='haveBuiltPostBody'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='haveBuiltRequestHeaders'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='hideNetworkActivityIndicator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='inProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='incrementBandwidthUsedInLastSecond:'>
<arg declared_type='unsigned long' type='L' index='0' type64='Q' name='bytes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementDownloadSizeBy:'>
<arg declared_type='long long' type='q' index='0' name='length'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementUploadSizeBy:'>
<arg declared_type='long long' type='q' index='0' name='length'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='newURL'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='isBandwidthThrottled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isMultitaskingSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isNetworkInUse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isNetworkReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isResponseCompressed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mainRequest'>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
<method selector='markAsFinished'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='maxBandwidthPerSecond'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</method>
<method class_method='true' selector='maxUploadReadLength'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</method>
<method class_method='true' selector='mimeTypeForFileAtPath:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfTimesToRetryOnTimeout'>
<retval declared_type='int' type='i'/>
</method>
<method selector='originalURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method class_method='true' selector='parseMimeType:andResponseEncoding:fromContentType:'>
<arg declared_type='NSString**' type='^@' index='0' name='mimeType'/>
<arg declared_type='NSStringEncoding*' type='^I' index='1' type64='^Q' name='stringEncoding'/>
<arg declared_type='NSString*' type='@' index='2' name='contentType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parseStringEncodingFromHeaders'>
<retval declared_type='void' type='v'/>
</method>
<method selector='partialDownloadSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='performSelector:onTarget:withObject:amount:callerToRetain:'>
<arg declared_type='SEL' type=':' index='0' name='selector'/>
<arg declared_type='id*' type='^@' index='1' name='target'/>
<arg declared_type='id' type='@' index='2' name='object'/>
<arg declared_type='void*' type='^v' index='3' name='amount'/>
<arg declared_type='id' type='@' index='4' name='caller'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performThrottling'>
<retval declared_type='void' type='v'/>
</method>
<method selector='persistentConnectionTimeoutSeconds'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='postBody'>
<retval declared_type='NSMutableData*' type='@'/>
</method>
<method selector='postBodyFilePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='postLength'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='proxyAuthenticationRealm'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyAuthenticationRetryCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='proxyAuthenticationScheme'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyCredentials'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='proxyDomain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyHost'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyPassword'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyPort'>
<retval declared_type='int' type='i'/>
</method>
<method selector='proxyType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyUsername'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='queue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rawResponseData'>
<retval declared_type='NSMutableData*' type='@'/>
</method>
<method selector='readResponseHeaders'>
<retval declared_type='void' type='v'/>
</method>
<method selector='redirectToURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='newURL'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeAuthenticationCredentialsFromSessionStore:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='credentials'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeCredentialsForHost:port:protocol:realm:'>
<arg declared_type='NSString*' type='@' index='0' name='host'/>
<arg declared_type='int' type='i' index='1' name='port'/>
<arg declared_type='NSString*' type='@' index='2' name='protocol'/>
<arg declared_type='NSString*' type='@' index='3' name='realm'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeCredentialsForProxy:port:realm:'>
<arg declared_type='NSString*' type='@' index='0' name='host'/>
<arg declared_type='int' type='i' index='1' name='port'/>
<arg declared_type='NSString*' type='@' index='2' name='realm'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeFileAtPath:error:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<arg declared_type='NSError**' type='^@' index='1' name='err'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='removeProxyAuthenticationCredentialsFromSessionStore:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='credentials'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTemporaryCompressedUploadFile'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeTemporaryDownloadFile'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeTemporaryUncompressedDownloadFile'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeTemporaryUploadFile'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeUploadProgressSoFar'>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestCookies'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='requestCredentials'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='requestFinished'>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestHeaders'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='requestID'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='requestMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requestReceivedResponseHeaders:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='newHeaders'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestStarted'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requestWithURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='newURL'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='requestWithURL:usingCache:'>
<arg declared_type='NSURL*' type='@' index='0' name='newURL'/>
<arg declared_type='id' type='@' index='1' name='cache'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='requestWithURL:usingCache:andCachePolicy:'>
<arg declared_type='NSURL*' type='@' index='0' name='newURL'/>
<arg declared_type='id' type='@' index='1' name='cache'/>
<arg declared_type='UA_ASICachePolicy' type='i' index='2' name='policy'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseCookies'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='responseHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='responseStatusCode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='responseStatusMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='retryCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='retryUsingNewConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='retryUsingSuppliedCredentials'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='saveCredentials:forHost:port:protocol:realm:'>
<arg declared_type='NSURLCredential*' type='@' index='0' name='credentials'/>
<arg declared_type='NSString*' type='@' index='1' name='host'/>
<arg declared_type='int' type='i' index='2' name='port'/>
<arg declared_type='NSString*' type='@' index='3' name='protocol'/>
<arg declared_type='NSString*' type='@' index='4' name='realm'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='saveCredentials:forProxy:port:realm:'>
<arg declared_type='NSURLCredential*' type='@' index='0' name='credentials'/>
<arg declared_type='NSString*' type='@' index='1' name='host'/>
<arg declared_type='int' type='i' index='2' name='port'/>
<arg declared_type='NSString*' type='@' index='3' name='realm'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveCredentialsToKeychain:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='newCredentials'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='savedCredentialsForHost:port:protocol:realm:'>
<arg declared_type='NSString*' type='@' index='0' name='host'/>
<arg declared_type='int' type='i' index='1' name='port'/>
<arg declared_type='NSString*' type='@' index='2' name='protocol'/>
<arg declared_type='NSString*' type='@' index='3' name='realm'/>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method class_method='true' selector='savedCredentialsForProxy:port:protocol:realm:'>
<arg declared_type='NSString*' type='@' index='0' name='host'/>
<arg declared_type='int' type='i' index='1' name='port'/>
<arg declared_type='NSString*' type='@' index='2' name='protocol'/>
<arg declared_type='NSString*' type='@' index='3' name='realm'/>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='secondsToCache'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='sessionCookies'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method class_method='true' selector='sessionCredentialsStore'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method class_method='true' selector='sessionProxyCredentialsStore'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setAllowCompressedResponse:'>
<arg declared_type='BOOL' type='B' index='0' name='allowCompressedResponse'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowResumeForFileDownloads:'>
<arg declared_type='BOOL' type='B' index='0' name='allowResumeForFileDownloads'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationNeededBlock:'>
<arg declared_type='UA_ASIBasicBlock' type='@?' index='0' function_pointer='true' name='anAuthenticationBlock'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationScheme:'>
<arg declared_type='NSString*' type='@' index='0' name='authenticationScheme'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBytesReceivedBlock:'>
<arg declared_type='UA_ASIProgressBlock' type='@?' index='0' function_pointer='true' name='aBytesReceivedBlock'>
<arg declared_type='unsigned long long' type='Q'/>
<arg declared_type='unsigned long long' type='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBytesSentBlock:'>
<arg declared_type='UA_ASIProgressBlock' type='@?' index='0' function_pointer='true' name='aBytesSentBlock'>
<arg declared_type='unsigned long long' type='Q'/>
<arg declared_type='unsigned long long' type='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachePolicy:'>
<arg declared_type='UA_ASICachePolicy' type='i' index='0' name='cachePolicy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheStoragePolicy:'>
<arg declared_type='UA_ASICacheStoragePolicy' type='i' index='0' name='cacheStoragePolicy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientCertificateIdentity:'>
<arg declared_type='SecIdentityRef' type='^{__SecIdentity=}' index='0' name='anIdentity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientCertificates:'>
<arg declared_type='NSArray*' type='@' index='0' name='clientCertificates'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionBlock:'>
<arg declared_type='UA_ASIBasicBlock' type='@?' index='0' function_pointer='true' name='aCompletionBlock'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLength:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='contentLength'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataDecompressor:'>
<arg declared_type='UA_ASIDataDecompressor*' type='@' index='0' name='dataDecompressor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataReceivedBlock:'>
<arg declared_type='UA_ASIDataBlock' type='@?' index='0' function_pointer='true' name='aReceivedBlock'>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultCache:'>
<arg declared_type='id' type='@' index='0' name='cache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultResponseEncoding:'>
<arg declared_type='NSStringEncoding' type='I' index='0' type64='Q' name='defaultResponseEncoding'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultTimeOutSeconds:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='newTimeOutSeconds'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultUserAgentString:'>
<arg declared_type='NSString*' type='@' index='0' name='agent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidCreateTemporaryPostDataFile:'>
<arg declared_type='BOOL' type='B' index='0' name='didCreateTemporaryPostDataFile'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFailSelector:'>
<arg declared_type='SEL' type=':' index='0' name='didFailSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFinishSelector:'>
<arg declared_type='SEL' type=':' index='0' name='didFinishSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidReceiveDataSelector:'>
<arg declared_type='SEL' type=':' index='0' name='didReceiveDataSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidReceiveResponseHeadersSelector:'>
<arg declared_type='SEL' type=':' index='0' name='didReceiveResponseHeadersSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidStartSelector:'>
<arg declared_type='SEL' type=':' index='0' name='didStartSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDomain:'>
<arg declared_type='NSString*' type='@' index='0' name='domain'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadCache:'>
<arg declared_type='id' type='@' index='0' name='downloadCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadDestinationPath:'>
<arg declared_type='NSString*' type='@' index='0' name='downloadDestinationPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressDelegate:'>
<arg declared_type='id' type='@' index='0' name='downloadProgressDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadSizeIncrementedBlock:'>
<arg declared_type='UA_ASISizeBlock' type='@?' index='0' function_pointer='true' name='aDownloadSizeIncrementedBlock'>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' type='@' index='0' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailedBlock:'>
<arg declared_type='UA_ASIBasicBlock' type='@?' index='0' function_pointer='true' name='aFailedBlock'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHaveBuiltPostBody:'>
<arg declared_type='BOOL' type='B' index='0' name='haveBuiltPostBody'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHaveBuiltRequestHeaders:'>
<arg declared_type='BOOL' type='B' index='0' name='haveBuiltRequestHeaders'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadersReceivedBlock:'>
<arg declared_type='UA_ASIHeadersBlock' type='@?' index='0' function_pointer='true' name='aReceivedBlock'>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='mainRequest'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setMaxBandwidthPerSecond:'>
<arg declared_type='unsigned long' type='L' index='0' type64='Q' name='bytes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTimesToRetryOnTimeout:'>
<arg declared_type='int' type='i' index='0' name='numberOfTimesToRetryOnTimeout'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='originalURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPACurl:'>
<arg declared_type='NSURL*' type='@' index='0' name='PACurl'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='password'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentConnectionTimeoutSeconds:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='persistentConnectionTimeoutSeconds'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostBody:'>
<arg declared_type='NSMutableData*' type='@' index='0' name='postBody'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostBodyFilePath:'>
<arg declared_type='NSString*' type='@' index='0' name='postBodyFilePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostLength:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='postLength'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyAuthenticationNeededBlock:'>
<arg declared_type='UA_ASIBasicBlock' type='@?' index='0' function_pointer='true' name='aProxyAuthenticationBlock'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyAuthenticationScheme:'>
<arg declared_type='NSString*' type='@' index='0' name='proxyAuthenticationScheme'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyCredentials:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='proxyCredentials'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyDomain:'>
<arg declared_type='NSString*' type='@' index='0' name='proxyDomain'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyHost:'>
<arg declared_type='NSString*' type='@' index='0' name='proxyHost'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyPassword:'>
<arg declared_type='NSString*' type='@' index='0' name='proxyPassword'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyPort:'>
<arg declared_type='int' type='i' index='0' name='proxyPort'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyType:'>
<arg declared_type='NSString*' type='@' index='0' name='proxyType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyUsername:'>
<arg declared_type='NSString*' type='@' index='0' name='proxyUsername'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueue:'>
<arg declared_type='id' type='@' index='0' name='queue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRawResponseData:'>
<arg declared_type='NSMutableData*' type='@' index='0' name='rawResponseData'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestCookies:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='requestCookies'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestCredentials:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='requestCredentials'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestHeaders:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='requestHeaders'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestMethod:'>
<arg declared_type='NSString*' type='@' index='0' name='requestMethod'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestRedirectedBlock:'>
<arg declared_type='UA_ASIBasicBlock' type='@?' index='0' function_pointer='true' name='aRedirectBlock'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseEncoding:'>
<arg declared_type='NSStringEncoding' type='I' index='0' type64='Q' name='responseEncoding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseHeaders:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='responseHeaders'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecondsToCache:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='secondsToCache'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSessionCookies:'>
<arg declared_type='NSMutableArray*' type='@' index='0' name='newSessionCookies'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldAttemptPersistentConnection:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldAttemptPersistentConnection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCompressRequestBody:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldCompressRequestBody'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldContinueWhenAppEntersBackground:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldContinueWhenAppEntersBackground'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldPresentAuthenticationDialog:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldPresentAuthenticationDialog'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldPresentCredentialsBeforeChallenge:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldPresentCredentialsBeforeChallenge'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldPresentProxyAuthenticationDialog:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldPresentProxyAuthenticationDialog'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldRedirect:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldRedirect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldResetDownloadProgress:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldResetDownloadProgress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldResetUploadProgress:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldResetUploadProgress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldStreamPostDataFromDisk:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldStreamPostDataFromDisk'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setShouldThrottleBandwidthForWWAN:'>
<arg declared_type='BOOL' type='B' index='0' name='throttle'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setShouldUpdateNetworkActivityIndicator:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldUpdate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseRFC2616RedirectBehaviour:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldUseRFC2616RedirectBehaviour'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldWaitToInflateCompressedResponses:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldWaitToInflateCompressedResponses'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowAccurateProgress:'>
<arg declared_type='BOOL' type='B' index='0' name='showAccurateProgress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartedBlock:'>
<arg declared_type='UA_ASIBasicBlock' type='@?' index='0' function_pointer='true' name='aStartedBlock'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' type='i' index='0' type64='q' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTemporaryFileDownloadPath:'>
<arg declared_type='NSString*' type='@' index='0' name='temporaryFileDownloadPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTemporaryUncompressedDataDownloadPath:'>
<arg declared_type='NSString*' type='@' index='0' name='temporaryUncompressedDataDownloadPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeOutSeconds:'>
<arg declared_type='NSTimeInterval' type='d' index='0' name='timeOutSeconds'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalBytesRead:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='totalBytesRead'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalBytesSent:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='totalBytesSent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressDelegate:'>
<arg declared_type='id' type='@' index='0' name='uploadProgressDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadSizeIncrementedBlock:'>
<arg declared_type='UA_ASISizeBlock' type='@?' index='0' function_pointer='true' name='anUploadSizeIncrementedBlock'>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseCookiePersistence:'>
<arg declared_type='BOOL' type='B' index='0' name='useCookiePersistence'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseHTTPVersionOne:'>
<arg declared_type='BOOL' type='B' index='0' name='useHTTPVersionOne'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseKeychainPersistence:'>
<arg declared_type='BOOL' type='B' index='0' name='useKeychainPersistence'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseSessionPersistence:'>
<arg declared_type='BOOL' type='B' index='0' name='useSessionPersistence'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserAgent:'>
<arg declared_type='NSString*' type='@' index='0' name='userAgent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg declared_type='NSString*' type='@' index='0' name='username'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidatesSecureCertificate:'>
<arg declared_type='BOOL' type='B' index='0' name='validatesSecureCertificate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillRedirectSelector:'>
<arg declared_type='SEL' type=':' index='0' name='willRedirectSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='shouldAttemptPersistentConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldCompressRequestBody'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldContinueWhenAppEntersBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldPresentAuthenticationDialog'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldPresentCredentialsBeforeChallenge'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldPresentProxyAuthenticationDialog'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldRedirect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldResetDownloadProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldResetUploadProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldStreamPostDataFromDisk'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldUseRFC2616RedirectBehaviour'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldWaitToInflateCompressedResponses'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showAccurateProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showAuthenticationDialog'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='showNetworkActivityIndicator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showProxyAuthenticationDialog'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startAsynchronous'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startSynchronous'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='storeAuthenticationCredentialsInSessionStore:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='credentials'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='storeProxyAuthenticationCredentialsInSessionStore:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='credentials'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='temporaryFileDownloadPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='temporaryUncompressedDataDownloadPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='threadForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='NSThread*' type='@'/>
</method>
<method class_method='true' selector='throttleBandwidthForWWANUsingLimit:'>
<arg declared_type='unsigned long' type='L' index='0' type64='Q' name='limit'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeOutSeconds'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='totalBytesRead'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='totalBytesSent'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='updateDownloadProgress'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateProgressIndicator:withProgress:ofTotal:'>
<arg declared_type='id*' type='^@' index='0' name='indicator'/>
<arg declared_type='unsigned long long' type='Q' index='1' name='progress'/>
<arg declared_type='unsigned long long' type='Q' index='2' name='total'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateProgressIndicators'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUploadProgress'>
<retval declared_type='void' type='v'/>
</method>
<method selector='uploadProgressDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='useCookiePersistence'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='useHTTPVersionOne'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='useKeychainPersistence'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='useSessionPersistence'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userAgent'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='validatesSecureCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willRedirectSelector'>
<retval declared_type='SEL' type=':'/>
</method>
</class>
<class name='UA_ASIInputStream'>
<method class_method='true' selector='inputStreamWithData:request:'>
<arg declared_type='NSData*' type='@' index='0' name='data'/>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='1' name='request'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='inputStreamWithFileAtPath:request:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='1' name='request'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='request'>
<retval declared_type='UA_ASIHTTPRequest*' type='@'/>
</method>
<method selector='setRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStream:'>
<arg declared_type='NSInputStream*' type='@' index='0' name='stream'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
</class>
<class name='UA_ASINetworkQueue'>
<method selector='addHEADOperation:'>
<arg declared_type='NSOperation*' type='@' index='0' name='operation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bytesDownloadedSoFar'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='bytesUploadedSoFar'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='downloadProgressDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='go'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='queue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='queueDidFinishSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='requestDidFailSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='requestDidFinishSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='requestDidReceiveResponseHeadersSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='requestDidStartSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='requestWillRedirectSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='requestsCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBytesDownloadedSoFar:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='bytesDownloadedSoFar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBytesUploadedSoFar:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='bytesUploadedSoFar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressDelegate:'>
<arg declared_type='id' type='@' index='0' name='downloadProgressDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueueDidFinishSelector:'>
<arg declared_type='SEL' type=':' index='0' name='queueDidFinishSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestDidFailSelector:'>
<arg declared_type='SEL' type=':' index='0' name='requestDidFailSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestDidFinishSelector:'>
<arg declared_type='SEL' type=':' index='0' name='requestDidFinishSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestDidReceiveResponseHeadersSelector:'>
<arg declared_type='SEL' type=':' index='0' name='requestDidReceiveResponseHeadersSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestDidStartSelector:'>
<arg declared_type='SEL' type=':' index='0' name='requestDidStartSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestWillRedirectSelector:'>
<arg declared_type='SEL' type=':' index='0' name='requestWillRedirectSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCancelAllRequestsOnFailure:'>
<arg declared_type='BOOL' type='B' index='0' name='shouldCancelAllRequestsOnFailure'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowAccurateProgress:'>
<arg declared_type='BOOL' type='B' index='0' name='showAccurateProgress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalBytesToDownload:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='totalBytesToDownload'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalBytesToUpload:'>
<arg declared_type='unsigned long long' type='Q' index='0' name='totalBytesToUpload'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressDelegate:'>
<arg declared_type='id' type='@' index='0' name='uploadProgressDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldCancelAllRequestsOnFailure'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showAccurateProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='totalBytesToDownload'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='totalBytesToUpload'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='uploadProgressDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='UA_FMDatabase'>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method variadic='true' selector='boolForQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='objs'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyRetryTimeout'>
<retval declared_type='int' type='i'/>
</method>
<method selector='cachedStatements'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='changes'>
<retval declared_type='int' type='i'/>
</method>
<method selector='checkedOut'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearCachedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnExists:columnName:'>
<arg declared_type='NSString*' type='@' index='0' name='tableName'/>
<arg declared_type='NSString*' type='@' index='1' name='columnName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='crashOnErrors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method variadic='true' selector='dataForQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='objs'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='databasePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg declared_type='NSString*' type='@' index='0' name='inPath'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='dateForQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='objs'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method variadic='true' selector='doubleForQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='objs'/>
<retval declared_type='double' type='d'/>
</method>
<method variadic='true' selector='executeQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='executeQuery:withArgumentsInArray:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<arg declared_type='NSArray*' type='@' index='1' name='arguments'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='executeQuery:withArgumentsInArray:orVAList:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<arg declared_type='NSArray*' type='@' index='1' name='arrayArgs'/>
<arg declared_type='va_list' type='*' declared_type64='__va_list_tag*' index='2' type64='^{__va_list_tag=II^v^v}' name='args'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='executeUpdate:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withArgumentsInArray:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<arg declared_type='NSArray*' type='@' index='1' name='arguments'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withArgumentsInArray:orVAList:'>
<arg declared_type='NSString*' type='@' index='0' name='sql'/>
<arg declared_type='NSArray*' type='@' index='1' name='arrayArgs'/>
<arg declared_type='va_list' type='*' declared_type64='__va_list_tag*' index='2' type64='^{__va_list_tag=II^v^v}' name='args'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getSchema'>
<retval declared_type='UA_FMResultSet*' type='@'/>
</method>
<method selector='getTableSchema:'>
<arg declared_type='NSString*' type='@' index='0' name='tableName'/>
<retval declared_type='UA_FMResultSet*' type='@'/>
</method>
<method selector='goodConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hadError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inUse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' type='@' index='0' name='inPath'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='intForQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='objs'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='lastErrorCode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='lastErrorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lastInsertRowId'>
<retval declared_type='sqlite_int64' type='q'/>
</method>
<method selector='logsErrors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method variadic='true' selector='longForQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='objs'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='open'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openWithFlags:'>
<arg declared_type='int' type='i' index='0' name='flags'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rekey:'>
<arg declared_type='NSString*' type='@' index='0' name='key'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyRetryTimeout:'>
<arg declared_type='int' type='i' index='0' name='newBusyRetryTimeout'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachedStatements:'>
<arg declared_type='NSMutableDictionary*' type='@' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCheckedOut:'>
<arg declared_type='BOOL' type='B' index='0' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCrashOnErrors:'>
<arg declared_type='BOOL' type='B' index='0' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInTransaction:'>
<arg declared_type='BOOL' type='B' index='0' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInUse:'>
<arg declared_type='BOOL' type='B' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString*' type='@' index='0' name='key'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setLogsErrors:'>
<arg declared_type='BOOL' type='B' index='0' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCacheStatements:'>
<arg declared_type='BOOL' type='B' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTraceExecution:'>
<arg declared_type='BOOL' type='B' index='0' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldCacheStatements'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sqliteHandle'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteLibVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method variadic='true' selector='stringForQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='objs'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tableExists:'>
<arg declared_type='NSString*' type='@' index='0' name='tableName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='traceExecution'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UA_FMResultSet'>
<method selector='UTF8StringForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='unsigned char*' const='true' type='*'/>
</method>
<method selector='UTF8StringForColumnName:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='unsigned char*' const='true' type='*'/>
</method>
<method selector='boolForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boolForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnIndexForName:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='columnIndexIsNull:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnIsNull:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnNameForIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dataForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataNoCopyForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataNoCopyForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dateForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='doubleForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='doubleForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='hasAnotherRow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='intForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='intForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='kvcMagic:'>
<arg declared_type='id' type='@' index='0' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='longForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='longForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='longLongIntForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='longLongIntForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='next'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='resultSetWithStatement:usingParentDatabase:'>
<arg declared_type='UA_FMStatement*' type='@' index='0' name='statement'/>
<arg declared_type='UA_FMDatabase*' type='@' index='1' name='aDB'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setParentDB:'>
<arg declared_type='UA_FMDatabase*' type='@' index='0' name='newDb'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatement:'>
<arg declared_type='UA_FMStatement*' type='@' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statement'>
<retval declared_type='UA_FMStatement*' type='@'/>
</method>
<method selector='stringForColumn:'>
<arg declared_type='NSString*' type='@' index='0' name='columnName'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForColumnIndex:'>
<arg declared_type='int' type='i' index='0' name='columnIdx'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UA_FMStatement'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuery:'>
<arg declared_type='NSString*' type='@' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatement:'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}' index='0' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseCount:'>
<arg declared_type='long' type='l' index='0' type64='q' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statement'>
<retval declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
</method>
<method selector='useCount'>
<retval declared_type='long' type='l' type64='q'/>
</method>
</class>
<class name='UA_Reachability'>
<method selector='connectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentReachabilityStatus'>
<retval declared_type='UA_NetworkStatus' type='i'/>
</method>
<method class_method='true' selector='reachabilityForInternetConnection'>
<retval declared_type='UA_Reachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityForLocalWiFi'>
<retval declared_type='UA_Reachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityWithAddress:'>
<arg declared_type='struct sockaddr_in*' const='true' type='^{sockaddr_in=CCS{in_addr=I}[8c]}' index='0' name='hostAddress'/>
<retval declared_type='UA_Reachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityWithHostName:'>
<arg declared_type='NSString*' type='@' index='0' name='hostName'/>
<retval declared_type='UA_Reachability*' type='@'/>
</method>
<method selector='startNotifier'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopNotifier'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UA_SBJSON'>
<method selector='fragmentWithString:error:'>
<arg declared_type='NSString*' type='@' index='0' name='jsonrep'/>
<arg declared_type='NSError**' type='^@' index='1' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithString:allowScalar:error:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<arg declared_type='BOOL' type='B' index='1' name='x'/>
<arg declared_type='NSError**' type='^@' index='2' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithString:error:'>
<arg declared_type='NSString*' type='@' index='0' name='jsonrep'/>
<arg declared_type='NSError**' type='^@' index='1' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringWithFragment:error:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<arg declared_type='NSError**' type='^@' index='1' name='error'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringWithObject:allowScalar:error:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<arg declared_type='BOOL' type='B' index='1' name='x'/>
<arg declared_type='NSError**' type='^@' index='2' name='error'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringWithObject:error:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<arg declared_type='NSError**' type='^@' index='1' name='error'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UA_SBJsonBase'>
<method selector='addErrorWithCode:description:'>
<arg declared_type='NSUInteger' type='I' index='0' type64='Q' name='code'/>
<arg declared_type='NSString*' type='@' index='1' name='str'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearErrorTrace'>
<retval declared_type='void' type='v'/>
</method>
<method selector='errorTrace'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='UA_SBJsonParser'>
<method selector='fragmentWithString:'>
<arg declared_type='id' type='@' index='0' name='repr'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithString:'>
<arg declared_type='id' type='@' index='0' name='repr'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UA_SBJsonWriter'>
<method selector='stringWithFragment:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringWithObject:'>
<arg declared_type='id' type='@' index='0' name='value'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UA_ZipArchive'>
<method selector='CloseZipFile2'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='CreateZipFile2:'>
<arg declared_type='NSString*' type='@' index='0' name='zipFile'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='UnzipCloseFile'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='UnzipFileTo:overWrite:'>
<arg declared_type='NSString*' type='@' index='0' name='path'/>
<arg declared_type='BOOL' type='B' index='1' name='overwrite'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='UnzipOpenFile:'>
<arg declared_type='NSString*' type='@' index='0' name='zipFile'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addFileToZip:newname:'>
<arg declared_type='NSString*' type='@' index='0' name='file'/>
<arg declared_type='NSString*' type='@' index='1' name='newname'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UAirship'>
<method selector='analytics'>
<retval declared_type='UAAnalytics*' type='@'/>
</method>
<method selector='appId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='appSecret'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deviceToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deviceTokenHasChanged'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='land'>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationService'>
<retval declared_type='UALocationService*' type='@'/>
</method>
<method selector='ready'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='registerDeviceToken:'>
<arg declared_type='NSData*' type='@' index='0' name='token'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceToken:withAlias:'>
<arg declared_type='NSData*' type='@' index='0' name='token'/>
<arg declared_type='NSString*' type='@' index='1' name='alias'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceToken:withExtraInfo:'>
<arg declared_type='NSData*' type='@' index='0' name='token'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='info'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerDeviceTokenWithExtraInfo:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='info'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='server'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAnalytics:'>
<arg declared_type='UAAnalytics*' type='@' index='0' name='analytics'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppId:'>
<arg declared_type='NSString*' type='@' index='0' name='appId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppSecret:'>
<arg declared_type='NSString*' type='@' index='0' name='appSecret'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeviceTokenHasChanged:'>
<arg declared_type='BOOL' type='B' index='0' name='deviceTokenHasChanged'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocationService:'>
<arg declared_type='UALocationService*' type='@' index='0' name='locationService'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setLogging:'>
<arg declared_type='BOOL' type='B' index='0' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReady:'>
<arg declared_type='BOOL' type='B' index='0' name='ready'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServer:'>
<arg declared_type='NSString*' type='@' index='0' name='server'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shared'>
<retval declared_type='UAirship*' type='@'/>
</method>
<method class_method='true' selector='takeOff:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='options'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unRegisterDeviceToken'>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='UADownloadManagerDelegate'>
<method type='v16@0:4f8i12' type64='v24@0:8f16i20' selector='downloadQueueProgress:count:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<arg declared_type='int' type='i' index='1' name='count'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='requestDidFail:'>
<arg declared_type='UAHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='requestDidSucceed:'>
<arg declared_type='UADownloadContent*' type='@' index='0' name='downloadContent'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAHTTPConnectionDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='requestDidFail:'>
<arg declared_type='UAHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='requestDidSucceed:response:responseData:'>
<arg declared_type='UAHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSHTTPURLResponse*' type='@' index='1' name='response'/>
<arg declared_type='NSData*' type='@' index='2' name='responseData'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAInboxJavaScriptDelegate'>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='callbackArguments:withOptions:'>
<arg declared_type='NSArray*' type='@' index='0' name='args'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='options'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UAInboxMessageListObserver'>
<method type='v8@0:4' type64='v16@0:8' selector='batchDeleteFailed'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='batchDeleteFinished'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='batchMarkAsReadFailed'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='batchMarkAsReadFinished'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='inboxLoadFailed'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='messageListLoaded'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='messageListWillLoad'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='singleMessageMarkAsReadFailed:'>
<arg declared_type='UAInboxMessage*' type='@' index='0' name='message'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='singleMessageMarkAsReadFinished:'>
<arg declared_type='UAInboxMessage*' type='@' index='0' name='message'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAInboxPushHandlerDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='newMessageArrived:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='message'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAInboxUIProtocol'>
<method class_method='true' type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='displayInbox:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='displayMessage:message:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='NSString*' type='@' index='1' name='messageID'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='v8@0:4' type64='v16@0:8' selector='loadLaunchMessage'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='v8@0:4' type64='v16@0:8' selector='quitInbox'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UALocationProviderDelegate'>
<method type='v20@0:4@8@12i16' type64='v36@0:8@16@24i32' selector='locationProvider:withLocationManager:didChangeAuthorizationStatus:'>
<arg declared_type='id' type='@' index='0' name='locationProvider'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='CLAuthorizationStatus' type='i' index='2' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='locationProvider:withLocationManager:didFailWithError:'>
<arg declared_type='id' type='@' index='0' name='locationProvider'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='NSError*' type='@' index='2' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='locationProvider:withLocationManager:didUpdateLocation:fromLocation:'>
<arg declared_type='id' type='@' index='0' name='locationProvider'/>
<arg declared_type='CLLocationManager*' type='@' index='1' name='locationManager'/>
<arg declared_type='CLLocation*' type='@' index='2' name='newLocation'/>
<arg declared_type='CLLocation*' type='@' index='3' name='oldLocation'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UALocationProviderProtocol'>
<method type='@8@0:4' type64='@16@0:8' selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method type='d8@0:4' type64='d16@0:8' selector='desiredAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method type='d8@0:4' type64='d16@0:8' selector='distanceFilter'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='locationManager'>
<retval declared_type='CLLocationManager*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='provider'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='purpose'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='i8@0:4' type64='i16@0:8' selector='serviceStatus'>
<retval declared_type='UALocationProviderStatus' type='i'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4d8' type64='v24@0:8d16' selector='setDesiredAccuracy:'>
<arg declared_type='CLLocationAccuracy' type='d' index='0' name='desiredAccuracy'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4d8' type64='v24@0:8d16' selector='setDistanceFilter:'>
<arg declared_type='CLLocationDistance' type='d' index='0' name='distanceFilter'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setLocationManager:'>
<arg declared_type='CLLocationManager*' type='@' index='0' name='locationManager'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setProvider:'>
<arg declared_type='NSString*' type='@' index='0' name='provider'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setPurpose:'>
<arg declared_type='NSString*' type='@' index='0' name='newPurpose'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4i8' type64='v20@0:8i16' selector='setServiceStatus:'>
<arg declared_type='UALocationProviderStatus' type='i' index='0' name='serviceStatus'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='startReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='stopReportingLocation'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UALocationServiceDelegate'>
<method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='locationService:didChangeAuthorizationStatus:'>
<arg declared_type='UALocationService*' type='@' index='0' name='service'/>
<arg declared_type='CLAuthorizationStatus' type='i' index='1' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='locationService:didFailWithError:'>
<arg declared_type='UALocationService*' type='@' index='0' name='service'/>
<arg declared_type='NSError*' type='@' index='1' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='locationService:didUpdateToLocation:fromLocation:'>
<arg declared_type='UALocationService*' type='@' index='0' name='service'/>
<arg declared_type='CLLocation*' type='@' index='1' name='newLocation'/>
<arg declared_type='CLLocation*' type='@' index='2' name='oldLocation'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAProductObserverProtocol'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='productProgressChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='progress'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='productStatusChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAPushNotificationDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='displayLocalizedNotificationAlert:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='alertDict'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='displayNotificationAlert:'>
<arg declared_type='NSString*' type='@' index='0' name='alertMessage'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='handleBackgroundNotification:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='notification'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4i8' type64='v20@0:8i16' selector='handleBadgeUpdate:'>
<arg declared_type='int' type='i' index='0' name='badgeNumber'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='handleNotification:withCustomPayload:'>
<arg declared_type='NSDictionary*' type='@' index='0' name='notification'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='customPayload'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='playNotificationSound:'>
<arg declared_type='NSString*' type='@' index='0' name='sound'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAPushUIProtocol'>
<method class_method='true' type='v12@0:4B8' type64='v20@0:8B16' selector='closeApnsSettingsAnimated:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='v12@0:4B8' type64='v20@0:8B16' selector='closeTokenSettingsAnimated:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='openApnsSettings:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='openTokenSettings:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UARegistrationObserver'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='addTagToDeviceFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='addTagToDeviceSucceeded'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='registerDeviceTokenFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='registerDeviceTokenSucceeded'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='removeTagFromDeviceFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='removeTagFromDeviceSucceeded'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unRegisterDeviceTokenFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='unRegisterDeviceTokenSucceeded'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAStoreFrontAlertProtocol'>
<method type='v24@0:4i8@12:16:20' type64='v48@0:8q16@24:32:40' selector='showConfirmRestoringAlert:delegate:approveSelector:disapproveSelector:'>
<arg declared_type='NSInteger' type='i' index='0' type64='q' name='restoreItemsCount'/>
<arg declared_type='id' type='@' index='1' name='object'/>
<arg declared_type='SEL' type=':' index='2' name='okSelector'/>
<arg declared_type='SEL' type=':' index='3' name='cancelSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='showDecompressContentFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='showDownloadContentFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='showPaymentTransactionFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='showReceiptVerifyFailedAlert'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAStoreFrontDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='productPurchased:'>
<arg declared_type='UAProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4f8i12' type64='v24@0:8f16i20' selector='productsDownloadProgress:count:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<arg declared_type='int' type='i' index='1' name='count'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='storeFrontWillHide'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAStoreFrontObserverProtocol'>
<method type='v8@0:4' type64='v16@0:8' selector='inventoryGroupUpdated'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='inventoryProductsChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='inventoryStatusChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='status'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='restoreStatusChanged:'>
<arg declared_type='NSNumber*' type='@' index='0' name='inRestoring'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAStoreFrontUIProtocol'>
<method class_method='true' type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='displayStoreFront:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='@8@0:4' type64='@16@0:8' selector='getAlertHandler'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' type='v8@0:4' type64='v16@0:8' selector='quitStoreFront'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UASubscriptionAlertProtocol'>
<method type='v16@0:4i8@12' type64='v28@0:8i16@20' selector='showAlert:for:'>
<arg declared_type='UASubscriptionAlertType' type='i' index='0' name='type'/>
<arg declared_type='id' type='@' index='1' name='sender'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UASubscriptionManagerObserver'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='downloadContentFailed:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='downloadContentFinished:'>
<arg declared_type='UASubscriptionContent*' type='@' index='0' name='content'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='inventoryUpdateFailedWithError:'>
<arg declared_type='NSError*' type='@' index='0' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='purchaseProductFailed:withError:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<arg declared_type='NSError*' type='@' index='1' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='purchaseProductFinished:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='restoreAutorenewableProductFailed:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='restoreAutorenewablesFailedWithError:'>
<arg declared_type='NSError*' type='@' index='0' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='restoreAutorenewablesFinished:'>
<arg declared_type='NSArray*' type='@' index='0' name='productsRestored'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='subscriptionProductRenewed:'>
<arg declared_type='UASubscriptionProduct*' type='@' index='0' name='product'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='subscriptionWillEnterBackground'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='subscriptionWillEnterForeground'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='subscriptionsUpdated:'>
<arg declared_type='NSArray*' type='@' index='0' name='subscriptions'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='userSubscriptionsUpdated:'>
<arg declared_type='NSArray*' type='@' index='0' name='subscriptions'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UASubscriptionUIProtocol'>
<method class_method='true' type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='displaySubscription:animated:'>
<arg declared_type='UIViewController*' type='@' index='0' name='viewController'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' type='v8@0:4' type64='v16@0:8' selector='hideSubscription'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAUserObserver'>
<method type='v8@0:4' type64='v16@0:8' selector='userRecoveryFailed'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='userRecoveryFinished'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='userRecoveryStarted'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='userRetrieveFailed'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='userRetrieveFinished'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='userRetrieveStarted'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='userUpdateFailed'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='userUpdated'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UAZipDownloadContentProtocol'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='decompressDidFail:'>
<arg declared_type='UAZipDownloadContent*' type='@' index='0' name='zipDownloadContent'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='decompressDidSucceed:'>
<arg declared_type='UAZipDownloadContent*' type='@' index='0' name='zipDownloadContent'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UA_ASICacheDelegate'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='cachedResponseDataForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='cachedResponseHeadersForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='canUseCachedDataForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v12@0:4i8' type64='v20@0:8i16' selector='clearCachedResponsesForStoragePolicy:'>
<arg declared_type='UA_ASICacheStoragePolicy' type='i' index='0' name='cachePolicy'/>
<retval declared_type='void' type='v'/>
</method>
<method type='i8@0:4' type64='i16@0:8' selector='defaultCachePolicy'>
<retval declared_type='UA_ASICachePolicy' type='i'/>
</method>
<method type='@20@0:4@8d12' type64='@32@0:8@16d24' selector='expiryDateForRequest:maxAge:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='maxAge'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isCachedDataCurrentForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='pathToCachedResponseDataForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='pathToCachedResponseHeadersForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='pathToStoreCachedResponseDataForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='pathToStoreCachedResponseHeadersForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='removeCachedDataForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='removeCachedDataForURL:'>
<arg declared_type='NSURL*' type='@' index='0' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8d12' type64='v32@0:8@16d24' selector='storeResponseForRequest:maxAge:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='maxAge'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8d12' type64='v32@0:8@16d24' selector='updateExpiryForRequest:maxAge:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='maxAge'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UA_ASIHTTPRequestDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='authenticationNeededForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='proxyAuthenticationNeededForRequest:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='request:didReceiveData:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSData*' type='@' index='1' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='request:didReceiveResponseHeaders:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSDictionary*' type='@' index='1' name='responseHeaders'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='request:willRedirectToURL:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='NSURL*' type='@' index='1' name='newURL'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='requestFailed:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='requestFinished:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='requestRedirected:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='requestStarted:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UA_ASIProgressDelegate'>
<method type='v20@0:4@8q12' type64='v32@0:8@16q24' selector='request:didReceiveBytes:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='bytes'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8q12' type64='v32@0:8@16q24' selector='request:didSendBytes:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='bytes'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8q12' type64='v32@0:8@16q24' selector='request:incrementDownloadSizeBy:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='newLength'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8q12' type64='v32@0:8@16q24' selector='request:incrementUploadSizeBy:'>
<arg declared_type='UA_ASIHTTPRequest*' type='@' index='0' name='request'/>
<arg declared_type='long long' type='q' index='1' name='newLength'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4f8' type64='v20@0:8f16' selector='setProgress:'>
<arg declared_type='float' type='f' index='0' name='newProgress'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UA_SBJsonParserOptions'>
<method type='I8@0:4' type64='Q16@0:8' selector='maxDepth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method type='v12@0:4I8' type64='v24@0:8Q16' selector='setMaxDepth:'>
<arg declared_type='NSUInteger' type='I' index='0' type64='Q' name='maxDepth'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UA_SBJsonWriterOptions'>
<method type='B8@0:4' type64='B16@0:8' selector='humanReadable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v12@0:4B8' type64='v20@0:8B16' selector='setHumanReadable:'>
<arg declared_type='BOOL' type='B' index='0' name='humanReadable'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' type64='v20@0:8B16' selector='setSortKeys:'>
<arg declared_type='BOOL' type='B' index='0' name='sortKeys'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B8@0:4' type64='B16@0:8' selector='sortKeys'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UA_ZipArchiveDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='ErrorMessage:'>
<arg declared_type='NSString*' type='@' index='0' name='msg'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='OverWriteOperation:'>
<arg declared_type='NSString*' type='@' index='0' name='file'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
